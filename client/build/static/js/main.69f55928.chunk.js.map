{"version":3,"sources":["svgImages/moneyTransfer.svg","svgImages/mainSvgBackground.svg","components/DashBoard/MetamaskLogin/DataShower.jsx","components/DashBoard/MetamaskLogin/TransactionShower.jsx","components/DashBoard/SimpleLogin/DataShowerSimp.jsx","components/DashBoard/SimpleLogin/TransactionShowerSimp.jsx","components/DashBoard/Dashboard.jsx","components/Loading.jsx","components/DashBoard/VARtETH.png","components/DashBoard/MetamaskLogin/SendETH.jsx","components/DashBoard/SimpleLogin/SendETHSimp.jsx","icons/metamaskLogo.png","components/Header.jsx","components/SignUp/Signup.jsx","components/Login.jsx","components/Error404.jsx","App.js","index.js"],"names":["DataShower","infoBlockStyle","userData","useContext","UserDataContext","userInfo","document","getElementsByTagName","offsetWidth","newWidth","width","getHeightForInfo","className","style","address","balance","transactions","length","TransactionShower","getTransactionTime","time","transTime","Date","getHours","getMinutes","getTransactionDate","curTime","getDate","getMonth","getFullYear","Math","round","onMouseOver","getElementsByClassName","offsetHeight","overflowY","onMouseOut","slice","reverse","map","data","i","display","paddingTop","paddingBottom","isReceived","flexDirection","color","marginTop","ethers","utils","formatEther","amount","backgroundColor","addr","DataShowerSimp","userName","email","undefined","TransactionShowerSimp","_hex","Dashboard","contextData","loginData","src","svgImage","alt","svgImageBack","isLogin","Loading","SendETH","contract","contractData","useState","confirmCode","setConfirmCode","isLoading","useRef","infoMistakes","setInfoMistakes","changeElemData","message","isProcessing","sendNotification","notificationData","Promise","res","rej","a","Notification","permission","alert","errorMess","requestPermission","greeting","console","log","title","body","code","icon","VARtETHLogo","dataValidation","reqData","to","isNaN","parseInt","isAddress","sendMoney","value","randomCode","floor","random","current","parseEther","wait","myRecords","tempUserRecords","dataToSend","transBlockNumber","blockNumber","requestOptions","method","credentials","headers","JSON","stringify","fetch","response","json","window","location","reload","top","toString","type","placeholder","justifyContent","onClick","SendETHSimp","password","sendRequest","wei","isDone","Header","useLocation","history","useHistory","logout","isLogout","push","cursor","pathname","isMetamask","metamaskLogo","textDecoration","Signup","isOTPCheck","sendSignUpRequest","inputElem","indexOf","replace","test","localStorage","setItem","isValid","removeItem","checkOTP","getItem","otp","privateKey","id","textAlign","fontSize","fontFamily","Login","sendInfo","authData","margin","paddingLeft","Error404","io","connect","createContext","App","setUserData","ETHContract","setETHContract","setIsMetamask","ethereum","on","useEffect","initialProcessing","provider","providers","Web3Provider","send","signer","getSigner","Contract","moneyTransfer","abi","getAddress","getBalance","fetchedData","userDataOp","Provider","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.69f55928.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/moneyTransfer.5bb7aaca.svg\";","export default __webpack_public_path__ + \"static/media/mainSvgBackground.c9a8acda.svg\";","import { useContext } from 'react'\r\nimport { UserDataContext } from '../../../App';\r\nconst DataShower = () => {\r\n\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n    let infoBlockStyle;\r\n  \r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 380)) {\r\n            let newWidth = ((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 80) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n    return (\r\n        <>\r\n            {\r\n                userData === null ? <></> : <div className=\"dataShowerMain\">\r\n                    <div className=\"dataShowerHeading\"><i className=\"fa fa-user\" aria-hidden=\"true\"></i></div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock firstDataShowerInfoBlock \">\r\n                        <div className=\"infoBlockHeading\">Address</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.address}</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Balance</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.balance} Eth</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">TOT</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.transactions.length} Transactions</div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataShower;","import { useContext } from 'react'\r\nimport { UserDataContext } from '../../../App';\r\nimport { ethers } from 'ethers';\r\nconst TransactionShower = () => {\r\n\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n\r\n    let infoBlockStyle;\r\n\r\n    const getTransactionTime = (time) => {\r\n        let transTime = new Date(time * 1000)\r\n        return (transTime.getHours() + \":\" + transTime.getMinutes());;\r\n    }\r\n\r\n    const getTransactionDate = (time) => {\r\n        let transTime = new Date(time * 1000)\r\n        let curTime = new Date();\r\n        let months = ['Jan', 'Feb', 'March', 'April', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\r\n        if ((curTime.getDate() === transTime.getDate()) && (curTime.getMonth() === transTime.getMonth()) && (curTime.getFullYear() === transTime.getFullYear())) {\r\n            return;\r\n        }\r\n        else {\r\n            return `${transTime.getDate()} ${months[transTime.getMonth()]} ${transTime.getFullYear()}`;\r\n        }\r\n    }\r\n\r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 380)) {\r\n            let newWidth = Math.round((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 80) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n\r\n    return (\r\n        <>\r\n            {\r\n                userData === null ? <></> : <div className=\"transShowerMain\">\r\n                    <div className=\"dataShowerHeading\"><i className=\"fa fa-exchange\"></i></div>\r\n                    <div onMouseOver={() => (\r\n                        document.getElementsByClassName(\"transactionContainer\")[0].offsetHeight >= 380 ?\r\n                            document.getElementsByClassName(\"transactionContainer\")[0].style.overflowY = \"scroll\" : <></>\r\n                    )} onMouseOut={() => (\r\n                        document.getElementsByClassName(\"transactionContainer\")[0].style.overflowY = \"hidden\"\r\n                    )} className='transactionContainer'>\r\n                        {\r\n                            userData.transactions.length === 0 ? <><div className=\"noTransactionShower\">No Transactions</div></> : userData.transactions.slice(0).reverse().map((data, i) => (\r\n                                <div key={i} className=\"transShowerInfoBlock\">\r\n                                    <div style={{ display: \"flex\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.3rem\", paddingBottom: \"0.3rem\" }}>\r\n                                            {\r\n                                                data.isReceived === true ?\r\n                                                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                        <i style={{ color: \"lime\" }} className=\"fa fa-chevron-up\"></i>\r\n                                                        <i style={{ marginTop: \"-0.5rem\", color: \"#97ff97\" }} className=\"fa fa-chevron-up\"></i>\r\n                                                    </div> :\r\n                                                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                        <i style={{ color: \"#ff787c\" }} className=\"fa fa-chevron-down\"></i>\r\n                                                        <i style={{ marginTop: \"-0.5rem\", color: \"#ff2a2a\" }} className=\"fa fa-chevron-down\"></i>\r\n                                                    </div>\r\n                                            }\r\n\r\n                                        </div>\r\n                                        <div className=\"infoBlockData\">{ethers.utils.formatEther(data.amount)} Eth</div>\r\n                                    </div>\r\n\r\n                                    <div style={{ display: \"flex\", backgroundColor: \"#9799d1\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.5rem\", paddingBottom: \"0.5rem\" }}>\r\n                                            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                {data.isReceived === true ? <span>From</span> : <span>To</span>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div style={infoBlockStyle} className=\"infoBlockData\">{data.addr}</div>\r\n                                    </div>\r\n\r\n                                    <div style={{ display: \"flex\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.3rem\", paddingBottom: \"0.3rem\" }}>\r\n                                            Date\r\n                                        </div>\r\n                                        <div className=\"infoBlockData\">{getTransactionTime(data.time)}&nbsp;&nbsp;&nbsp;&nbsp;{getTransactionDate(data.time)}</div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionShower;","import { useContext } from 'react'\r\nimport { UserDataContext } from '../../../App';\r\nconst DataShowerSimp = () => {\r\n\r\n    // Code Of This File Is Similar To \"./MetamaskLogin/DataShower\", We Can Use That File But For More Simplicity We Has Created This File And It Will Call Only When User Will Do Simple Login.\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n    let infoBlockStyle;\r\n  \r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 380)) {\r\n            let newWidth = ((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 80) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n    return (\r\n        <>\r\n            {\r\n                userData === null ? <></> : <div className=\"dataShowerMain\">\r\n                    <div className=\"dataShowerHeading\"><i className=\"fa fa-user\" aria-hidden=\"true\"></i></div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock firstDataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Address</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.userName}</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Address</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.email}</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Address</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.address}</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Balance</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.balance} Eth</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">TOT</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.transactions !== undefined ? userData.transactions.length : 0} Transactions</div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataShowerSimp;","import { useContext } from 'react'\r\nimport { UserDataContext } from '../../../App';\r\nimport { ethers } from 'ethers';\r\nconst TransactionShowerSimp = () => {\r\n\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n \r\n    let infoBlockStyle;\r\n\r\n    const getTransactionTime = (time) => {\r\n        let transTime = new Date(time._hex * 1000)\r\n        return (transTime.getHours() + \":\" + transTime.getMinutes());;\r\n    }\r\n\r\n    const getTransactionDate = (time) => {\r\n        let transTime = new Date(time._hex * 1000)\r\n        let curTime = new Date();\r\n        let months = ['Jan', 'Feb', 'March', 'April', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\r\n        if ((curTime.getDate() === transTime.getDate()) && (curTime.getMonth() === transTime.getMonth()) && (curTime.getFullYear() === transTime.getFullYear())) {\r\n            return;\r\n        }\r\n        else {\r\n            return `${transTime.getDate()} ${months[transTime.getMonth()]} ${transTime.getFullYear()}`;\r\n        }\r\n    }\r\n\r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 380)) {\r\n            let newWidth = Math.round((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 80) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n\r\n    return (\r\n        <>\r\n            {\r\n                userData === null ? <></> : <div className=\"transShowerMain\">\r\n                    <div className=\"dataShowerHeading\"><i className=\"fa fa-exchange\"></i></div>\r\n                    <div onMouseOver={() => (\r\n                        document.getElementsByClassName(\"transactionContainer\")[0].offsetHeight >= 380 ?\r\n                            document.getElementsByClassName(\"transactionContainer\")[0].style.overflowY = \"scroll\" : <></>\r\n                    )} onMouseOut={() => (\r\n                        document.getElementsByClassName(\"transactionContainer\")[0].style.overflowY = \"hidden\"\r\n                    )} className='transactionContainer'>\r\n                        {\r\n                            userData.transactions.length === 0 ? <><div className=\"noTransactionShower\">No Transactions</div></> : userData.transactions.slice(0).reverse().map((data, i) => (\r\n                                <div key={i} className=\"transShowerInfoBlock\">\r\n                                    <div style={{ display: \"flex\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.3rem\", paddingBottom: \"0.3rem\" }}>\r\n                                            {\r\n                                                data.isReceived === true ?\r\n                                                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                        <i style={{ color: \"lime\" }} className=\"fa fa-chevron-up\"></i>\r\n                                                        <i style={{ marginTop: \"-0.5rem\", color: \"#97ff97\" }} className=\"fa fa-chevron-up\"></i>\r\n                                                    </div> :\r\n                                                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                        <i style={{ color: \"#ff787c\" }} className=\"fa fa-chevron-down\"></i>\r\n                                                        <i style={{ marginTop: \"-0.5rem\", color: \"#ff2a2a\" }} className=\"fa fa-chevron-down\"></i>\r\n                                                    </div>\r\n                                            }\r\n\r\n                                        </div>\r\n                                        <div className=\"infoBlockData\">{ethers.utils.formatEther(data.amount)} Eth</div>\r\n                                    </div>\r\n\r\n                                    <div style={{ display: \"flex\", backgroundColor: \"#9799d1\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.5rem\", paddingBottom: \"0.5rem\" }}>\r\n                                            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                {data.isReceived === true ? <span>From</span> : <span>To</span>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div style={infoBlockStyle} className=\"infoBlockData\">{data.addr}</div>\r\n                                    </div>\r\n\r\n                                    <div style={{ display: \"flex\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.3rem\", paddingBottom: \"0.3rem\" }}>\r\n                                            Date\r\n                                        </div>\r\n                                        <div className=\"infoBlockData\">{getTransactionTime(data.time)}&nbsp;&nbsp;&nbsp;&nbsp;{getTransactionDate(data.time)}</div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionShowerSimp;","import React, { useContext, useEffect } from \"react\";\r\nimport svgImage from '../../svgImages/moneyTransfer.svg';\r\nimport svgImageBack from '../../svgImages/mainSvgBackground.svg';\r\nimport DataShower from \"./MetamaskLogin/DataShower\";\r\nimport TransactionShower from \"./MetamaskLogin/TransactionShower\";\r\nimport DataShowerSimp from \"./SimpleLogin/DataShowerSimp\"\r\nimport TransactionShowerSimp from \"./SimpleLogin/TransactionShowerSimp\";\r\nimport { loginData } from \"../../App\"\r\n\r\nconst Dashboard = () => {\r\n    const contextData = useContext(loginData);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mainHeader\">\r\n                <div className=\"svgImageShower\">\r\n                    <div className=\"svgBackgroundImage\"><img src={svgImage} alt=\"logo\" /></div>\r\n                    <div className=\"backSVGImage\">\r\n                        <img src={svgImageBack} alt=\"svgBackground\" />\r\n                    </div>\r\n\r\n                    <div className=\"infoShowerMain\">\r\n                        {\r\n                            contextData.isLogin === true ?\r\n                                <>\r\n                                    <DataShowerSimp />\r\n                                    <TransactionShowerSimp />\r\n                                </> :\r\n                                <>\r\n                                    <DataShower />\r\n                                    <TransactionShower />\r\n                                </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <>\r\n            <div className=\"mainLoader\">\r\n                <div className=\"subLoader\">\r\n                    <div className=\"loaderText\">V</div>\r\n                </div>\r\n                <div className=\"animatorDiv\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loading;","export default __webpack_public_path__ + \"static/media/VARtETH.41393847.png\";","import { ethers } from 'ethers';\r\nimport { useContext, useState, useRef } from 'react'\r\nimport { UserDataContext } from '../../../App';\r\nimport Loading from '../../Loading';\r\nimport VARtETHLogo from '.././VARtETH.png';\r\n\r\nconst SendETH = () => {\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n    const contract = contextData.contractData;\r\n    const [confirmCode, setConfirmCode] = useState(null)\r\n    const isLoading = useRef(false);\r\n    const [infoMistakes, setInfoMistakes] = useState(\"No Mistakes\");\r\n\r\n    let infoBlockStyle;\r\n\r\n    const changeElemData = (message, isProcessing) => {\r\n        setInfoMistakes(message)\r\n        if (isProcessing === true) {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:#3c3c3c;background-color:#d1ffd1;`;\r\n        } else {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:red;background-color:#ffd0d0;`;\r\n        }\r\n    }\r\n\r\n    const sendNotification = (notificationData) => {\r\n        return new Promise(async (res, rej) => {\r\n            if (Notification.permission === \"denied\") {\r\n                alert(notificationData.errorMess)\r\n                res(false);\r\n            }\r\n            else if (Notification.permission === \"default\") {\r\n                await Notification.requestPermission();\r\n                const greeting = new Notification('Hi, How are you?');\r\n                console.log(greeting)\r\n            }\r\n            else {\r\n                const greeting = new Notification(notificationData.title, {\r\n                    body: notificationData.code,\r\n                    icon: VARtETHLogo\r\n                });\r\n                console.log(greeting)\r\n            }\r\n            res(true);\r\n        })\r\n    }\r\n\r\n    const dataValidation = (reqData) => {\r\n        return new Promise((res, rej) => {\r\n            if (reqData.to === \"\" || reqData.amount === \"\") {\r\n                changeElemData(\"Input Fields Are Empty\", false);\r\n            } else if (isNaN(parseInt(reqData.amount))) {\r\n                changeElemData(\"Invalid Amount\", false);\r\n            } else if (reqData.amount > (userData.balance)) {\r\n                changeElemData(\"Insufficient Balance\", false);\r\n            } else if (ethers.utils.isAddress(reqData.address) === false) {\r\n                changeElemData(\"Invalid Address\", false);\r\n            } else {\r\n                res(true);\r\n                document.getElementsByClassName(\"mistakeShower\")[0].style = \"width:0%;\"\r\n            }\r\n            res(false);\r\n        })\r\n    }\r\n\r\n    // const resendCode = async () => {\r\n    //     let digits = '0123456789';\r\n    //     let randomCode = '';\r\n    //     for (let i = 0; i < 4; i++) {\r\n    //         randomCode += digits[Math.floor(Math.random() * 10)];\r\n    //     }\r\n    //     let notificationData = {\r\n    //         title: \"Confirmation Code\",\r\n    //         code: randomCode,\r\n    //         errorMess: \"Please Allow For Notifications, We Will Send Confirmation Code Via Notification\"\r\n    //     }\r\n    //     await sendNotification(notificationData);\r\n    //     setConfirmCode(randomCode)\r\n    // }\r\n\r\n    const sendMoney = async () => {\r\n        let reqData = {\r\n            address: document.getElementsByClassName(\"sendETHAddress\")[0].value,\r\n            amount: document.getElementsByClassName(\"sendETHAmount\")[0].value\r\n        }\r\n        if (await dataValidation(reqData) === true) {\r\n            if (confirmCode === null) {\r\n                let digits = '0123456789';\r\n                let randomCode = '';\r\n                for (let i = 0; i < 4; i++) {\r\n                    randomCode += digits[Math.floor(Math.random() * 10)];\r\n                }\r\n                let notificationData = {\r\n                    title: \"Confirmation Code\",\r\n                    code: randomCode,\r\n                    errorMess: \"Please Allow For Notifications, We Will Send Confirmation Code Via Notification\"\r\n                }\r\n\r\n                if (await sendNotification(notificationData) === true) {\r\n                    document.getElementsByClassName(\"confirmCode\")[0].style = `visibility:visible;opacity:1;margin-top:1.5rem;`;\r\n                    document.getElementsByClassName(\"sendETHSubmitBTN\")[0].style.marginTop = \"3rem\";\r\n                    setConfirmCode(randomCode)\r\n                }\r\n            }\r\n            else {\r\n                if (document.getElementsByClassName(\"sendETHCode\")[0].value === confirmCode) {\r\n                    if (await dataValidation(reqData) === true) {\r\n                        isLoading.current = true;\r\n                        setConfirmCode(null);\r\n                        changeElemData(\"Wait....\", true);\r\n                        try {\r\n                            let res;\r\n                            try {\r\n                                res = await contract.sendMoney(reqData.address, { value: ethers.utils.parseEther(reqData.amount) });\r\n                                await res.wait();\r\n                            } catch (error) {\r\n                                changeElemData(\"Transaction Rejected\", false);\r\n                                isLoading.current = false;\r\n                                return;\r\n                            }\r\n\r\n                            let tempUserRecords = await contract.myRecords();\r\n                            let dataToSend = {\r\n                                address: reqData.address,\r\n                                transBlockNumber: res.blockNumber,\r\n                                data: {\r\n                                    addr: userData.address,\r\n                                    amount: tempUserRecords[tempUserRecords.length - 1].amount,\r\n                                    time: tempUserRecords[tempUserRecords.length - 1].time,\r\n                                    isReceived: true\r\n                                }\r\n                            }\r\n\r\n                            const requestOptions = {\r\n                                method: 'POST',\r\n                                credentials: \"include\", // Remove Or Comment Out In Deployment.\r\n                                headers: { 'Content-Type': 'application/json' },\r\n                                body: JSON.stringify(dataToSend)\r\n                            };\r\n                            let response = await fetch('/storeReceiverData', requestOptions) // Remove \"http://localhost:8000\" In Deployment. \r\n                            await response.json()\r\n\r\n                            parseInt(document.getElementsByClassName(\"sendETHCode\")[0].value)\r\n                            document.getElementsByClassName(\"sendETHAddress\")[0].value = \"\";\r\n                            document.getElementsByClassName(\"sendETHAmount\")[0].value = \"\";\r\n                            document.getElementsByClassName(\"sendETHCode\")[0].value = \"\";\r\n                            document.getElementsByClassName(\"confirmCode\")[0].style = `opacity:0;visibility:hidden;margin-top:0rem;`;\r\n                            document.getElementsByClassName(\"sendETHSubmitBTN\")[0].style.marginTop = \"0rem\";\r\n\r\n                            window.location.reload(true);\r\n                        } catch (error) {\r\n                            changeElemData(\"Something Went Wrong\", false);\r\n                            isLoading.current = false;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    changeElemData(\"Invalid Code\", false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 490)) {\r\n            let newWidth = Math.round((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 90) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n    return (\r\n        <>\r\n            <div className=\"sendETHBody\" style={{ marginTop: (parseInt(document.getElementsByClassName(\"infoShowerMain\")[0].style.top) + 60).toString() + \"px\" }}>\r\n                {\r\n                    contract === null ? <></> : <div className=\"sendETHMain\">\r\n                        <div className=\"dataShowerHeading sendETHHeading\"><i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i> ETH</div>\r\n                        <div className=\"mistakeShower\">\r\n                            {infoMistakes}\r\n                        </div>\r\n                        <div style={{ marginTop: \"0rem\" }} className=\" dataShowerInfoBlock\">\r\n                            <div className=\"infoBlockHeading\">Address</div>\r\n                            <input style={infoBlockStyle} type=\"text\" placeholder=\"Enter Receiver Address\" className=\"sendETHAddress sendETHTakeInfo\" />\r\n                        </div>\r\n\r\n                        <div style={{ marginTop: \"2rem\" }} className=\" dataShowerInfoBlock\">\r\n                            <div className=\"infoBlockHeading\">Amount</div>\r\n                            <input style={infoBlockStyle} type=\"number\" placeholder=\"Enter Amount To Send\" className=\"sendETHAmount sendETHTakeInfo\" />\r\n                        </div>\r\n\r\n                        <div className=\" confirmCode dataShowerInfoBlock\">\r\n                            <div className=\"infoBlockHeading\">Code</div>\r\n                            <input style={infoBlockStyle} type=\"number\" placeholder=\"Enter Confirmation Code\" className=\"sendETHCode sendETHTakeInfo\" />\r\n                        </div>\r\n\r\n                        <div className=\"submitBTNMain\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div onClick={() => sendMoney()} className=\"sendETHSubmitBTN\">\r\n                                Transfer\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n            {\r\n                isLoading.current === true ? <Loading /> : <></>\r\n            }\r\n            {/* <button onClick={() => sendNotification(\"Hello\")}>Click</button> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendETH;","import { useContext, useState, useRef } from 'react'\r\nimport { ethers } from 'ethers';\r\nimport { UserDataContext } from '../../../App';\r\nimport Loading from '../../Loading';\r\nimport VARtETHLogo from '.././VARtETH.png';\r\n\r\nconst SendETHSimp = () => {\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n    const [confirmCode, setConfirmCode] = useState(null);\r\n    const isLoading = useRef(false);\r\n    const [infoMistakes, setInfoMistakes] = useState(\"No Mistakes\");\r\n\r\n    let infoBlockStyle;\r\n\r\n    const changeElemData = (message, isProcessing) => {\r\n        setInfoMistakes(message)\r\n        if (isProcessing === true) {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:#3c3c3c;background-color:#d1ffd1;`;\r\n        } else {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:red;background-color:#ffd0d0;`;\r\n        }\r\n    }\r\n\r\n    const sendNotification = (notificationData) => {\r\n        return new Promise(async (res, rej) => {\r\n            if (Notification.permission === \"denied\") {\r\n                alert(notificationData.errorMess)\r\n                res(false);\r\n            }\r\n            else if (Notification.permission === \"default\") {\r\n                await Notification.requestPermission();\r\n                const greeting = new Notification('Hi, How are you?');\r\n                console.log(greeting)\r\n            }\r\n            else {\r\n                const greeting = new Notification(notificationData.title, {\r\n                    body: notificationData.code,\r\n                    icon: VARtETHLogo\r\n                });\r\n                console.log(greeting)\r\n            }\r\n            res(true);\r\n        })\r\n    }\r\n\r\n    const dataValidation = (reqData) => {\r\n        return new Promise((res, rej) => {\r\n            if (reqData.to === \"\" || reqData.amount === \"\" || reqData.password === \"\") {\r\n                changeElemData(\"Input Fields Are Empty\", false);\r\n            } else if (isNaN(parseInt(reqData.amount))) {\r\n                changeElemData(\"Invalid Amount\", false);\r\n            } else if (reqData.amount > (userData.balance)) {\r\n                changeElemData(\"Insufficient Balance\", false);\r\n            } else if (ethers.utils.isAddress(reqData.to) === false) {\r\n                changeElemData(\"Invalid Address\", false);\r\n            } else if (reqData.password.length < 8) {\r\n                changeElemData(\"Invalid Password\", false);\r\n            }\r\n            else {\r\n                res(true);\r\n                document.getElementsByClassName(\"mistakeShower\")[0].style = \"width:0%;\"\r\n            }\r\n            res(false);\r\n        })\r\n    }\r\n\r\n    // const resendCode = async () => {\r\n    //     let digits = '0123456789';\r\n    //     let randomCode = '';\r\n    //     for (let i = 0; i < 4; i++) {\r\n    //         randomCode += digits[Math.floor(Math.random() * 10)];\r\n    //     }\r\n    //     let notificationData = {\r\n    //         title: \"Confirmation Code\",\r\n    //         code: randomCode,\r\n    //         errorMess: \"Please Allow For Notifications, We Will Send Confirmation Code Via Notification\"\r\n    //     }\r\n    //     await sendNotification(notificationData);\r\n    //     setConfirmCode(randomCode)\r\n    // }\r\n\r\n    const sendRequest = async () => {\r\n        let reqData = {\r\n            to: document.getElementsByClassName(\"sendETHAddress\")[0].value,\r\n            amount: document.getElementsByClassName(\"sendETHAmount\")[0].value,\r\n            password: document.getElementsByClassName(\"sendETHPassword\")[0].value,\r\n        }\r\n        if (await dataValidation(reqData) === true) {\r\n            let wei = ethers.utils.parseEther(reqData.amount); // Converting Ethers To Wei, Visit \"https://docs.ethers.io/v4/api-utils.html\" For More Info.\r\n            reqData.amount = wei.toString();\r\n\r\n            isLoading.current = true;\r\n            setConfirmCode(null);\r\n            changeElemData(\"Wait....\", true);\r\n\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                credentials: \"include\", // Remove Or Comment Out In Deployment.\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(reqData)\r\n            };\r\n\r\n            let response = await fetch('/sendETH', requestOptions) // Remove \"http://localhost:8000\" In Deployment. \r\n            let data = await response.json()\r\n            isLoading.current = false;\r\n\r\n            if (data.isDone === true) {\r\n                changeElemData(data.message, true);\r\n                window.location.reload(true);\r\n            }\r\n            else {\r\n                changeElemData(data.message, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const sendMoney = async () => {\r\n        let reqData = {\r\n            to: document.getElementsByClassName(\"sendETHAddress\")[0].value,\r\n            amount: document.getElementsByClassName(\"sendETHAmount\")[0].value,\r\n            password: document.getElementsByClassName(\"sendETHPassword\")[0].value,\r\n        }\r\n        if (await dataValidation(reqData) === true) {\r\n            reqData.amount = ethers.utils.parseEther(reqData.amount);\r\n            if (confirmCode === null) {\r\n                let digits = '0123456789';\r\n                let randomCode = '';\r\n                for (let i = 0; i < 4; i++) {\r\n                    randomCode += digits[Math.floor(Math.random() * 10)];\r\n                }\r\n                let notificationData = {\r\n                    title: \"Confirmation Code\",\r\n                    code: randomCode,\r\n                    errorMess: \"Please Allow For Notifications, We Will Send Confirmation Code Via Notification\"\r\n                }\r\n                if (await sendNotification(notificationData) === true) {\r\n                    document.getElementsByClassName(\"confirmCode\")[0].style = `visibility:visible;opacity:1;margin-top:1.5rem;`;\r\n                    document.getElementsByClassName(\"sendETHSubmitBTN\")[0].style.marginTop = \"3rem\";\r\n                    setConfirmCode(randomCode);\r\n                }\r\n            }\r\n            else {\r\n                if (document.getElementsByClassName(\"sendETHCode\")[0].value === confirmCode) {\r\n                    await sendRequest();\r\n                    // console.log(parseInt(document.getElementsByClassName(\"sendETHCode\")[0].value), confirmCode)\r\n                    // document.getElementsByClassName(\"sendETHAddress\")[0].value = \"\";\r\n                    // document.getElementsByClassName(\"sendETHAmount\")[0].value = \"\";\r\n                    // document.getElementsByClassName(\"sendETHPassword\")[0].value = \"\";\r\n                    document.getElementsByClassName(\"sendETHCode\")[0].value = \"\";\r\n                    document.getElementsByClassName(\"confirmCode\")[0].style = `opacity:0;visibility:hidden;margin-top:0rem;`;\r\n                    document.getElementsByClassName(\"sendETHSubmitBTN\")[0].style.marginTop = \"0rem\";\r\n                }\r\n                else {\r\n                    changeElemData(\"Invalid Code\", false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 490)) {\r\n            let newWidth = Math.round((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 90) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"sendETHBody\" style={{ marginTop: (parseInt(document.getElementsByClassName(\"infoShowerMain\")[0].style.top) + 60).toString() + \"px\" }}>\r\n                <div className=\"sendETHMain\">\r\n                    <div className=\"dataShowerHeading sendETHHeading\"><i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i> ETH</div>\r\n                    <div className=\"mistakeShower\">\r\n                        {infoMistakes}\r\n                    </div>\r\n                    <div style={{ marginTop: \"0rem\" }} className=\" dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Address</div>\r\n                        <input style={infoBlockStyle} type=\"text\" placeholder=\"Enter Receiver Address\" className=\"sendETHAddress sendETHTakeInfo\" />\r\n                    </div>\r\n                    <div style={{ marginTop: \"2rem\" }} className=\" dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Amount</div>\r\n                        <input style={infoBlockStyle} type=\"number\" placeholder=\"Enter Amount To Send\" className=\"sendETHAmount sendETHTakeInfo\" />\r\n                    </div>\r\n                    <div style={{ marginTop: \"2rem\" }} className=\" dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Key</div>\r\n                        <input style={infoBlockStyle} type=\"password\" placeholder=\"Enter Your Key\" className=\"sendETHPassword sendETHTakeInfo\" />\r\n                    </div>\r\n                    <div className=\" confirmCode dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Code</div>\r\n                        <input style={infoBlockStyle} type=\"number\" placeholder=\"Enter Confirmation Code\" className=\"sendETHCode sendETHTakeInfo\" />\r\n                    </div>\r\n                    <div className=\"submitBTNMain\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                        <div onClick={() => sendMoney()} className=\"sendETHSubmitBTN\">\r\n                            Transfer\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                isLoading.current === true ? <Loading /> : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendETHSimp;","export default __webpack_public_path__ + \"static/media/metamaskLogo.dabbc866.png\";","import React, { useContext } from \"react\";\r\nimport metamaskLogo from \".././icons/metamaskLogo.png\";\r\nimport { loginData } from \".././App\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Header = () => {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const contextData = useContext(loginData);\r\n\r\n    const logout = async (isLogout) => {\r\n        let response = await fetch('/logout', { credentials: \"include\" })\r\n        await response.json() // Provides JSON Data   \r\n        if (isLogout === true) {\r\n            history.push(\"/login\");\r\n        }\r\n        window.location.reload(true);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"headerMainTop\">\r\n                <div className=\"headerSub\">\r\n                    <h1 className=\"mainTitle\"><span style={{ cursor: \"pointer\" }}>VARt</span> <span className=\"subTitle\">Eth</span></h1>\r\n                </div>\r\n                {\r\n                    location.pathname === \"/\" ?\r\n                        <div className=\"operationDiv\">\r\n                            {\r\n                                contextData.isMetamask === true && contextData.isLogin === true ?\r\n                                    <div className=\"operationBtn1\">\r\n                                        <img onClick={() => logout(false)} src={metamaskLogo} alt=\"Metamask\" />\r\n                                    </div> :\r\n                                    <></>\r\n                            }\r\n                            {\r\n                                contextData.isLogin === true ?\r\n                                    <div className=\"operationBtn2\">\r\n                                        <i onClick={() => logout(true)} className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n                                    </div> :\r\n                                    <div className=\"operationBtn2\">\r\n                                        <Link style={{ textDecoration: \"none\", color: \"inherit\" }} to=\"/login\"><i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i></Link>\r\n                                    </div>\r\n                            }\r\n                        </div> :\r\n                        <></>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport Loading from \"../Loading\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Signup = () => {\r\n    const isOTPCheck = useRef(false);\r\n    const [infoMistakes, setInfoMistakes] = useState(\"No Mistakes\");\r\n    const isLoading = useRef(false);\r\n\r\n    const changeElemData = (message, isProcessing) => {\r\n        setInfoMistakes(message)\r\n        if (isProcessing === true) {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;width:100%;color:#3c3c3c;background-color:#d1ffd1;`;\r\n        } else {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;width:100%;color:red;background-color:#ffd0d0;`;\r\n        }\r\n    }\r\n\r\n    const checkIsValidInfo = () => {\r\n        return new Promise((res, rej) => {\r\n            let inputElem = document.getElementsByClassName(\"takeInfoBlock\");\r\n            if (((inputElem[0].value === \"\") && (inputElem[1].value === \"\"))) {\r\n                changeElemData(\"Fill All Details\", false)\r\n            } else if ((inputElem[0].value === \"\")) {\r\n                changeElemData(\"Username Field Is Empty\", false)\r\n            } else if ((inputElem[1].value === \"\")) {\r\n                changeElemData(\"Email Field Is Empty\", false)\r\n            } else if ((inputElem[2].value === \"\")) {\r\n                changeElemData(\"Password Field Is Empty\", false)\r\n            } else if ((inputElem[2].value.length < 8)) {\r\n                changeElemData(\"Password Is Too Small \", false)\r\n            } else if ((inputElem[0].value.length >= 35)) {\r\n                changeElemData(\"Username Is Too Large\", false)\r\n            } else if (inputElem[0].value.indexOf(\"@\") !== -1) {\r\n                changeElemData(\"Username Should Not Have @\", false)\r\n            } else if ((((inputElem[0].value.length !== inputElem[0].value.replace(/ /g, '')).length) || ((inputElem[2].value.length !== inputElem[2].value.replace(/ /g, '')).length))) { // Visit \"https://stackoverflow.com/questions/6623231/remove-all-white-spaces-from-text\" For More Info About How To Remove All Whitespace From String.\r\n                if (((inputElem[2].value.length !== inputElem[2].value.replace(/ /g, '')).length)) {\r\n                    changeElemData(\"Password Have White Spaces\", false)\r\n                }\r\n                else {\r\n                    changeElemData(\"Username Have White Spaces\", false)\r\n                }\r\n            }\r\n            else {\r\n                if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(inputElem[1].value)) {\r\n                    res(true);\r\n                }\r\n                else {\r\n                    changeElemData(\"Invalid Email\", false)\r\n                }\r\n            }\r\n            res(false);\r\n        })\r\n    }\r\n\r\n    const sendSignUpRequest = async () => {\r\n        if (await checkIsValidInfo() === true) {\r\n            let userName = document.getElementsByClassName(\"takeInfoBlock\")[0].value;\r\n            let email = document.getElementsByClassName(\"takeInfoBlock\")[1].value;\r\n            let password = document.getElementsByClassName(\"takeInfoBlock\")[2].value;\r\n            isLoading.current = true;\r\n            changeElemData(\"Wait....\", true);\r\n            localStorage.setItem(\"userMail\", email); // Here We Will Store User Mail Id In Local Storage, We Will Use Them For OTP Checking And Send It To Server With Entered OTP.\r\n\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                credentials: \"include\", // Remove Or Comment Out In Deployment.\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    userName: userName,\r\n                    email: email,\r\n                    password: password\r\n                })\r\n            };\r\n            let response = await fetch('/signup', requestOptions) // Remove \"http://localhost:8000\" In Deployment. \r\n            let data = await response.json()\r\n           \r\n            isLoading.current = false;\r\n\r\n            if (data.isValid === undefined) {\r\n                localStorage.removeItem(\"userMail\");\r\n                changeElemData(data.message, false);\r\n            }\r\n            else {\r\n                isOTPCheck.current = true;\r\n                changeElemData(\"OTP Sended On Mail Id\", true);\r\n            }\r\n\r\n        } else {\r\n            console.log(\"Fill Details Properly\")\r\n        }\r\n    }\r\n\r\n    const checkOTP = async () => {\r\n        let inputElem = document.getElementsByClassName(\"takeInfoBlock\");\r\n        if ((inputElem[0].value.length !== 6) || ((inputElem[0].value.length !== inputElem[0].value.replace(/ /g, '')).length)) {\r\n            changeElemData(\"Invalid OTP\", false);\r\n        } else {\r\n            let email = localStorage.getItem(\"userMail\");\r\n            if ((email === undefined) || (email === null) || (email.length < 2) || (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) !== true)) {\r\n              \r\n                changeElemData(\"Invalid OTP\", false)\r\n            } else {\r\n                isLoading.current = true;\r\n                changeElemData(\"Wait....\", true);\r\n                const requestOptions = {\r\n                    method: 'POST',\r\n                    credentials: \"include\", // Remove Or Comment Out In Deployment.\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        email: email,\r\n                        otp: inputElem[0].value\r\n                    })\r\n                };\r\n                let response = await fetch('/signup/emailValidation', requestOptions) // Remove \"http://localhost:8000\" In Deployment. \r\n                let data = await response.json()\r\n              \r\n                isLoading.current = false;\r\n\r\n                if (data.privateKey === undefined) {\r\n                    changeElemData(data.message, false);\r\n                }\r\n                else {\r\n                    localStorage.removeItem(\"userMail\");\r\n                    changeElemData(data.message, true);\r\n                    window.location.reload(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <> {isOTPCheck.current === false ?\r\n            // This Group Of Code Is Used For Taking information's From User. It Will Take UserName, Email ID, And Password.\r\n            <>\r\n                <div className=\"mainDiv\">\r\n                    <div className=\"mainFormContainer\">\r\n                        <div className=\"subFormContainer\">\r\n                            <div className=\"formContainerHeading \">Sign Up</div>\r\n                            <div className=\"mistakeShower\">\r\n                                {infoMistakes}\r\n                            </div>\r\n\r\n                            <div id=\"dataTakerBlock1\" className=\"dataShowerInfoBlock\">\r\n                                <div className=\"infoBlockHeading takeInfo\">Username</div>\r\n                                <input type=\"text\" placeholder=\"Enter Unique Username\" className=\"takeInfoBlock\" />\r\n                            </div>\r\n\r\n                            <div id=\"dataTakerBlock2\" style={{ marginTop: \"2rem\" }} className=\"dataShowerInfoBlock\">\r\n                                <div className=\"infoBlockHeading takeInfo\">Email</div>\r\n                                <input type=\"text\" placeholder=\"Enter Email ID\" className=\"takeInfoBlock\" />\r\n                            </div>\r\n\r\n                            <div id=\"dataTakerBlock3\" style={{ marginTop: \"2rem\" }} className=\"dataShowerInfoBlock\">\r\n                                <div className=\"infoBlockHeading takeInfo\">Password</div>\r\n                                <input type=\"password\" placeholder=\"Enter Secure Password\" className=\"takeInfoBlock\" />\r\n                            </div>\r\n\r\n                            <div className=\"submitBTNMain\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                <div onClick={() => sendSignUpRequest()} className=\"submitBTN\">\r\n                                    Create\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ marginTop: \"1.5rem\", textAlign: \"center\", fontSize: \"1.3rem\", fontFamily: \"'Source Sans Pro', sans-serif\" }}>\r\n                            <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/login\">Already Have Account</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </> :\r\n            <><div className=\"mainDiv\">\r\n                <div className=\"mainFormContainer\">\r\n                    <div className=\"subFormContainer\">\r\n                        <div className=\"formContainerHeading \">Sign Up</div>\r\n                        <div className=\"mistakeShower\">\r\n                            {infoMistakes}\r\n                        </div>\r\n                        <div style={{ marginTop: \"2rem\" }} id=\"dataTakerBlock1\" className=\"dataShowerInfoBlock\">\r\n                            <div className=\"infoBlockHeading takeInfo\">OTP</div>\r\n                            <input type=\"number\" placeholder=\"Enter OTP\" className=\"takeInfoBlock\" />\r\n                        </div>\r\n                        <div className=\"submitBTNMain\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div onClick={() => checkOTP()} className=\"submitBTN\">\r\n                                Create\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div></>}\r\n\r\n            {\r\n                isLoading.current === true ? <Loading /> : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport Loading from \"./Loading\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Login = () => {\r\n    const [infoMistakes, setInfoMistakes] = useState(\"No Mistakes\"); // This State Wil Contains Mistake Message.\r\n    const isLoading = useRef(false);\r\n\r\n    const changeElemData = (message, isProcessing) => { // This Function Will Actually Change Properties Or Styling Of \"Mistake Shower Div\".\r\n        setInfoMistakes(message)\r\n        if (isProcessing === true) {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:#3c3c3c;background-color:#d1ffd1;`;\r\n        } else {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:red;background-color:#ffd0d0;`;\r\n        }\r\n    }\r\n\r\n    const checkInfo = () => {\r\n        return new Promise((res, rej) => {\r\n            const authData = document.getElementsByClassName(\"takeInfoBlock\")[0].value\r\n            if (authData === \"\" || document.getElementsByClassName(\"takeInfoBlock\")[1].value === \"\") {\r\n                changeElemData(\"Please Fill Add Details\", false)\r\n                res(false)\r\n            } else if (((ethers.utils.isAddress(authData) === true) || (authData.indexOf(\"@\") !== -1) || (authData.length < 35))) {\r\n                res(true)\r\n            } else {\r\n                changeElemData(\"Invalid Details\", false)\r\n                res(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    const sendInfo = async () => {\r\n        if (await checkInfo() === true) {\r\n            let authData = document.getElementsByClassName(\"takeInfoBlock\")[0].value;\r\n            let password = document.getElementsByClassName(\"takeInfoBlock\")[1].value;\r\n            isLoading.current = true;\r\n            changeElemData(\"Wait....\", true);\r\n\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                credentials: \"include\", // Remove Or Comment Out In Deployment.\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    authData: authData,\r\n                    password: password\r\n                })\r\n            };\r\n            let response = await fetch('/login', requestOptions) // Remove \"http://localhost:8000\" In Deployment. \r\n            let data = await response.json();\r\n            isLoading.current = false;\r\n\r\n            if (data.isValid === true) {\r\n                changeElemData(\"Done\", true);\r\n                window.location.reload(true);\r\n            }\r\n            else {\r\n                changeElemData(data.message, false);\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <>\r\n                <div className=\"mainDiv\">\r\n                    <div className=\"mainFormContainer\">\r\n                        <div className=\"subFormContainer\">\r\n                            <div className=\"formContainerHeading \">Login</div>\r\n                            <div className=\"mistakeShower\">\r\n                                {infoMistakes}\r\n                            </div>\r\n                            <div style={{ margin: \"0rem 1rem 0rem 1rem\" }} id=\"dataTakerBlock1\" className=\"dataShowerInfoBlock\">\r\n                                <input style={{ paddingLeft: \"3rem\" }} type=\"text\" placeholder=\"Username, Email, Or Address\" className=\"takeInfoBlock\" />\r\n                            </div>\r\n                            <div style={{ margin: \"2rem 1rem 0rem 1rem\" }} id=\"dataTakerBlock1\" className=\"dataShowerInfoBlock\">\r\n                                <input style={{ paddingLeft: \"3rem\" }} type=\"password\" placeholder=\"Password, Or Private Key\" className=\"takeInfoBlock\" />\r\n                            </div>\r\n\r\n                            <div className=\"submitBTNMain\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                <div onClick={() => sendInfo()} className=\"submitBTN\">\r\n                                    Submit\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ marginTop: \"1.5rem\", textAlign: \"center\", fontSize: \"1.3rem\", fontFamily: \"'Source Sans Pro', sans-serif\" }}>\r\n                            <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/signup\">Create New Account</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n            {\r\n                isLoading.current === true ? <Loading /> : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <>\r\n            <div className=\"div1\">\r\n                <div className=\"div2\">\r\n                    <div className=\"op40 err1\">\r\n                        <h1>4</h1>\r\n                    </div>\r\n                    <div className=\"op41 err1\">\r\n                        <h1>0</h1>\r\n                    </div>\r\n                    <div className=\"op42 err1\">\r\n                        <h1>4</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"message1\">\r\n                    <h1>Something Went Wrong</h1>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Error404;","import React, { useState, useRef, useEffect, createContext } from 'react';\nimport './App.css'\nimport { ethers } from \"ethers\";\nimport moneyTransfer from './contract/moneyTransfer.json';\nimport Dashboard from './components/DashBoard/Dashboard'\nimport SendETH from './components/DashBoard/MetamaskLogin/SendETH';\nimport SendETHSimp from './components/DashBoard/SimpleLogin/SendETHSimp';\nimport Loading from './components/Loading';\nimport Header from \"./components/Header\";\nimport SignUp from './components/SignUp/Signup';\nimport Login from \"./components/Login\";\nimport Error404 from './components/Error404';\nimport { Route, Switch, useHistory, useLocation } from \"react-router-dom\";\n\nimport io from \"socket.io-client\";\nconst socket = io.connect('/'); // Replace This URL To '/' In Deployment, If Front End Is Deployed On Same Server. In Case Of Different Domain Of Server Use Its Domain\n\nconst UserDataContext = createContext();\nconst loginData = createContext();\n\nfunction App() {\n  //location.reload();\n  const [userData, setUserData] = useState(null);\n  const [ETHContract, setETHContract] = useState(null);\n  const [isMetamask, setIsMetamask] = useState(null);\n  const isLogin = useRef(false);\n  const history = useHistory();\n  const location = useLocation();\n\n  const reloadPage = () => {\n    window.location.reload();\n  }\n\n  if (window.ethereum) { // This Statement Will Caught When Metamask Account Will Changed.\n    window.ethereum.on('accountsChanged', () => reloadPage());\n  }\n\n  useEffect( () => {\n    const initialProcessing=async()=>\n    {\n     // This Fetch Statement Will Send Request And Then Receive Info About Whether Cookie Contains Token Or Valid Token.\n    // If Response Will True So It Means Uses Has Created Account And They Can Use This App Without Metamask.\n    // If Response Will False So User Has To Create Account For Using App.\n    let response = await fetch('/isLogin', { credentials: \"include\" })\n    let data = await response.json() // Provides JSON Data\n    isLogin.current = data.message; // Response Stored In \"isLogin\" useRef.\n\n    if ((window.ethereum !== undefined) && (isLogin.current === false)) { // This Statement Checks That Whether User Have Metamask Or Not, \n      //If There Is A Metamask And Cookie Does Not Contains Token Then Statement Written Inside Will Execute. \n      setIsMetamask(true);\n\n      const provider = new ethers.providers.Web3Provider(\n        window.ethereum\n      );\n\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      let contract = new ethers.Contract('0x5149609a8e02B4A86D52249C58811C202972a546', moneyTransfer.abi, signer)\n\n      setETHContract(contract);\n      // await contract.sendMoney('0x58A7F5F4715333b6185Ef1AF19bC2e42fCB4b55f', { value: \"1000000000000000000\" });\n      let fetchedData = {\n        address: await signer.getAddress(),\n        balance: ethers.utils.formatEther(await signer.getBalance()),\n        transactions: await contract.myRecords()\n      }\n      setUserData(fetchedData);\n    }\n    else {\n      // If There Will Be Not Metamask Installed Then setIsMetamask Will Set To False Otherwise True.\n      if ((window.ethereum === undefined)) {\n        setIsMetamask(false);     \n      } else {\n        setIsMetamask(true);\n      }\n\n      // If isLogin Value Will Be False So It Indicates That There Is Not Cookie Available And User Is Not Log, In This Situation Page Will Redirect To \"/signup\" Otherwise Page Will Redirect To \"/\" Or Main Page.\n      if (isLogin.current === false) {\n        if (location.pathname !== \"/signup\") {\n          history.push('/login');\n        }\n      }\n      else {\n        history.push('/');\n        let response = await fetch('/getInfo', { credentials: \"include\" })\n        let userDataOp = await response.json()\n        setUserData(userDataOp.data);\n      }\n    }\n    }\n    initialProcessing();\n  }, [])\n\n\n  return (\n    <>\n      <loginData.Provider value={{ isLogin: isLogin.current, isMetamask: isMetamask }}>\n        <Header />\n\n        <Switch>\n          <Route exact path='/login'>\n            <Login />\n          </Route>\n          <Route exact path='/signup'>\n            <SignUp />\n          </Route>\n          <Route exact path='/'>\n            <UserDataContext.Provider value={{ userInfo: userData, contractData: ETHContract }}>\n              <Dashboard />\n              {\n                userData === null ? <Loading /> : isLogin.current === true ? <SendETHSimp /> : <SendETH />\n              }\n\n            </UserDataContext.Provider>\n          </Route>\n          <Route>\n            <Error404 />\n          </Route>\n        </Switch>\n      </loginData.Provider>\n    </>\n  )\n}\n\nexport default App\nexport { UserDataContext, loginData } // Exporting Context\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n      <App /> \n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}