{"version":3,"sources":["svgImages/moneyTransfer.svg","svgImages/mainSvgBackground.svg","components/DashBoard/MetamaskLogin/DataShower.jsx","components/DashBoard/MetamaskLogin/TransactionShower.jsx","components/DashBoard/SimpleLogin/DataShowerSimp.jsx","components/DashBoard/SimpleLogin/TransactionShowerSimp.jsx","components/DashBoard/Dashboard.jsx","components/Loading.jsx","components/DashBoard/MetamaskLogin/SendETH.jsx","components/DashBoard/SimpleLogin/SendETHSimp.jsx","icons/metamaskLogo.png","components/Header.jsx","components/SignUp/Signup.jsx","components/Login.jsx","components/Error404.jsx","App.js","index.js"],"names":["DataShower","infoBlockStyle","userData","useContext","UserDataContext","userInfo","console","log","document","getElementsByTagName","offsetWidth","newWidth","width","getHeightForInfo","className","style","address","balance","transactions","length","TransactionShower","getTransactionTime","time","transTime","Date","getHours","getMinutes","getTransactionDate","curTime","getDate","getMonth","getFullYear","Math","round","onMouseOver","getElementsByClassName","offsetHeight","overflowY","onMouseOut","slice","reverse","map","data","i","display","paddingTop","paddingBottom","isReceived","flexDirection","color","marginTop","ethers","utils","formatEther","amount","backgroundColor","addr","DataShowerSimp","userName","email","undefined","TransactionShowerSimp","_hex","Dashboard","contextData","loginData","src","svgImage","alt","svgImageBack","isLogin","Loading","SendETH","contract","contractData","useState","confirmCode","setConfirmCode","isLoading","useRef","infoMistakes","setInfoMistakes","changeElemData","message","isProcessing","sendNotification","notificationData","Promise","res","rej","a","Notification","permission","alert","errorMess","requestPermission","greeting","title","body","code","dataValidation","reqData","to","isNaN","parseInt","isAddress","sendMoney","value","randomCode","floor","random","current","parseEther","wait","myRecords","tempUserRecords","dataToSend","transBlockNumber","blockNumber","requestOptions","method","credentials","headers","JSON","stringify","fetch","response","json","window","location","reload","type","placeholder","justifyContent","onClick","SendETHSimp","password","sendRequest","wei","toString","isDone","Header","useLocation","history","useHistory","logout","isLogout","push","cursor","pathname","isMetamask","metamaskLogo","textDecoration","Signup","isOTPCheck","sendSignUpRequest","inputElem","indexOf","replace","test","localStorage","setItem","isValid","removeItem","checkOTP","getItem","otp","privateKey","id","textAlign","fontSize","fontFamily","Login","sendInfo","authData","margin","paddingLeft","Error404","io","connect","createContext","App","setUserData","ETHContract","setETHContract","setIsMetamask","ethereum","on","useEffect","initialProcessing","provider","providers","Web3Provider","send","signer","getSigner","Contract","moneyTransfer","abi","getAddress","getBalance","fetchedData","userDataOp","Provider","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.671179f4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/moneyTransfer.5bb7aaca.svg\";","export default __webpack_public_path__ + \"static/media/mainSvgBackground.c9a8acda.svg\";","import { useContext } from 'react'\r\nimport { UserDataContext } from '../../../App';\r\nconst DataShower = () => {\r\n\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n    let infoBlockStyle;\r\n    console.log(userData);\r\n\r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 380)) {\r\n            let newWidth = ((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 80) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n    return (\r\n        <>\r\n            {\r\n                userData === null ? <></> : <div className=\"dataShowerMain\">\r\n                    <div className=\"dataShowerHeading\"><i className=\"fa fa-user\" aria-hidden=\"true\"></i></div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock firstDataShowerInfoBlock \">\r\n                        <div className=\"infoBlockHeading\">Address</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.address}</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Balance</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.balance} Eth</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">TOT</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.transactions.length} Transactions</div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataShower;","import { useContext } from 'react'\r\nimport { UserDataContext } from '../../../App';\r\nimport { ethers } from 'ethers';\r\nconst TransactionShower = () => {\r\n\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n    console.log(userData);\r\n\r\n    let infoBlockStyle;\r\n\r\n    const getTransactionTime = (time) => {\r\n        let transTime = new Date(time * 1000)\r\n        return (transTime.getHours() + \":\" + transTime.getMinutes());;\r\n    }\r\n\r\n    const getTransactionDate = (time) => {\r\n        let transTime = new Date(time * 1000)\r\n        let curTime = new Date();\r\n        let months = ['Jan', 'Feb', 'March', 'April', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\r\n        if ((curTime.getDate() === transTime.getDate()) && (curTime.getMonth() === transTime.getMonth()) && (curTime.getFullYear() === transTime.getFullYear())) {\r\n            return;\r\n        }\r\n        else {\r\n            return `${transTime.getDate()} ${months[transTime.getMonth()]} ${transTime.getFullYear()}`;\r\n        }\r\n    }\r\n\r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 380)) {\r\n            let newWidth = Math.round((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 80) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n\r\n    return (\r\n        <>\r\n            {\r\n                userData === null ? <></> : <div className=\"transShowerMain\">\r\n                    <div className=\"dataShowerHeading\"><i className=\"fa fa-exchange\"></i></div>\r\n                    <div onMouseOver={() => (\r\n                        document.getElementsByClassName(\"transactionContainer\")[0].offsetHeight >= 380 ?\r\n                            document.getElementsByClassName(\"transactionContainer\")[0].style.overflowY = \"scroll\" : <></>\r\n                    )} onMouseOut={() => (\r\n                        document.getElementsByClassName(\"transactionContainer\")[0].style.overflowY = \"hidden\"\r\n                    )} className='transactionContainer'>\r\n                        {\r\n                            userData.transactions.length === 0 ? <><div className=\"noTransactionShower\">No Transactions</div></> : userData.transactions.slice(0).reverse().map((data, i) => (\r\n                                <div key={i} className=\"transShowerInfoBlock\">\r\n                                    <div style={{ display: \"flex\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.3rem\", paddingBottom: \"0.3rem\" }}>\r\n                                            {\r\n                                                data.isReceived === true ?\r\n                                                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                        <i style={{ color: \"lime\" }} className=\"fa fa-chevron-up\"></i>\r\n                                                        <i style={{ marginTop: \"-0.5rem\", color: \"#97ff97\" }} className=\"fa fa-chevron-up\"></i>\r\n                                                    </div> :\r\n                                                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                        <i style={{ color: \"#ff787c\" }} className=\"fa fa-chevron-down\"></i>\r\n                                                        <i style={{ marginTop: \"-0.5rem\", color: \"#ff2a2a\" }} className=\"fa fa-chevron-down\"></i>\r\n                                                    </div>\r\n                                            }\r\n\r\n                                        </div>\r\n                                        <div className=\"infoBlockData\">{ethers.utils.formatEther(data.amount)} Eth</div>\r\n                                    </div>\r\n\r\n                                    <div style={{ display: \"flex\", backgroundColor: \"#9799d1\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.5rem\", paddingBottom: \"0.5rem\" }}>\r\n                                            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                {data.isReceived === true ? <span>From</span> : <span>To</span>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div style={infoBlockStyle} className=\"infoBlockData\">{data.addr}</div>\r\n                                    </div>\r\n\r\n                                    <div style={{ display: \"flex\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.3rem\", paddingBottom: \"0.3rem\" }}>\r\n                                            Date\r\n                                        </div>\r\n                                        <div className=\"infoBlockData\">{getTransactionTime(data.time)}&nbsp;&nbsp;&nbsp;&nbsp;{getTransactionDate(data.time)}</div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionShower;","import { useContext } from 'react'\r\nimport { UserDataContext } from '../../../App';\r\nconst DataShowerSimp = () => {\r\n\r\n    // Code Of This File Is Similar To \"./MetamaskLogin/DataShower\", We Can Use That File But For More Simplicity We Has Created This File And It Will Call Only When User Will Do Simple Login.\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n    let infoBlockStyle;\r\n    console.log(userData);\r\n\r\n\r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 380)) {\r\n            let newWidth = ((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 80) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n    return (\r\n        <>\r\n            {\r\n                userData === null ? <></> : <div className=\"dataShowerMain\">\r\n                    <div className=\"dataShowerHeading\"><i className=\"fa fa-user\" aria-hidden=\"true\"></i></div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock firstDataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Address</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.userName}</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Address</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.email}</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Address</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.address}</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Balance</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.balance} Eth</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">TOT</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.transactions !== undefined ? userData.transactions.length : 0} Transactions</div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataShowerSimp;","import { useContext } from 'react'\r\nimport { UserDataContext } from '../../../App';\r\nimport { ethers } from 'ethers';\r\nconst TransactionShowerSimp = () => {\r\n\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n    console.log(userData);\r\n\r\n    let infoBlockStyle;\r\n\r\n    const getTransactionTime = (time) => {\r\n        let transTime = new Date(time._hex * 1000)\r\n        return (transTime.getHours() + \":\" + transTime.getMinutes());;\r\n    }\r\n\r\n    const getTransactionDate = (time) => {\r\n        let transTime = new Date(time._hex * 1000)\r\n        let curTime = new Date();\r\n        let months = ['Jan', 'Feb', 'March', 'April', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\r\n        if ((curTime.getDate() === transTime.getDate()) && (curTime.getMonth() === transTime.getMonth()) && (curTime.getFullYear() === transTime.getFullYear())) {\r\n            return;\r\n        }\r\n        else {\r\n            return `${transTime.getDate()} ${months[transTime.getMonth()]} ${transTime.getFullYear()}`;\r\n        }\r\n    }\r\n\r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 380)) {\r\n            let newWidth = Math.round((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 80) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n\r\n    return (\r\n        <>\r\n            {\r\n                userData === null ? <></> : <div className=\"transShowerMain\">\r\n                    <div className=\"dataShowerHeading\"><i className=\"fa fa-exchange\"></i></div>\r\n                    <div onMouseOver={() => (\r\n                        document.getElementsByClassName(\"transactionContainer\")[0].offsetHeight >= 380 ?\r\n                            document.getElementsByClassName(\"transactionContainer\")[0].style.overflowY = \"scroll\" : <></>\r\n                    )} onMouseOut={() => (\r\n                        document.getElementsByClassName(\"transactionContainer\")[0].style.overflowY = \"hidden\"\r\n                    )} className='transactionContainer'>\r\n                        {\r\n                            userData.transactions.length === 0 ? <><div className=\"noTransactionShower\">No Transactions</div></> : userData.transactions.slice(0).reverse().map((data, i) => (\r\n                                <div key={i} className=\"transShowerInfoBlock\">\r\n                                    <div style={{ display: \"flex\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.3rem\", paddingBottom: \"0.3rem\" }}>\r\n                                            {\r\n                                                data.isReceived === true ?\r\n                                                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                        <i style={{ color: \"lime\" }} className=\"fa fa-chevron-up\"></i>\r\n                                                        <i style={{ marginTop: \"-0.5rem\", color: \"#97ff97\" }} className=\"fa fa-chevron-up\"></i>\r\n                                                    </div> :\r\n                                                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                        <i style={{ color: \"#ff787c\" }} className=\"fa fa-chevron-down\"></i>\r\n                                                        <i style={{ marginTop: \"-0.5rem\", color: \"#ff2a2a\" }} className=\"fa fa-chevron-down\"></i>\r\n                                                    </div>\r\n                                            }\r\n\r\n                                        </div>\r\n                                        <div className=\"infoBlockData\">{ethers.utils.formatEther(data.amount)} Eth</div>\r\n                                    </div>\r\n\r\n                                    <div style={{ display: \"flex\", backgroundColor: \"#9799d1\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.5rem\", paddingBottom: \"0.5rem\" }}>\r\n                                            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                {data.isReceived === true ? <span>From</span> : <span>To</span>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div style={infoBlockStyle} className=\"infoBlockData\">{data.addr}</div>\r\n                                    </div>\r\n\r\n                                    <div style={{ display: \"flex\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.3rem\", paddingBottom: \"0.3rem\" }}>\r\n                                            Date\r\n                                        </div>\r\n                                        <div className=\"infoBlockData\">{getTransactionTime(data.time)}&nbsp;&nbsp;&nbsp;&nbsp;{getTransactionDate(data.time)}</div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionShowerSimp;","import React, { useContext } from \"react\";\r\nimport svgImage from '../../svgImages/moneyTransfer.svg';\r\nimport svgImageBack from '../../svgImages/mainSvgBackground.svg';\r\nimport DataShower from \"./MetamaskLogin/DataShower\";\r\nimport TransactionShower from \"./MetamaskLogin/TransactionShower\";\r\nimport DataShowerSimp from \"./SimpleLogin/DataShowerSimp\"\r\nimport TransactionShowerSimp from \"./SimpleLogin/TransactionShowerSimp\";\r\nimport { loginData } from \"../../App\"\r\n\r\nconst Dashboard = () => {\r\n    const contextData = useContext(loginData);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mainHeader\">\r\n                <div className=\"svgImageShower\">\r\n                    <div className=\"svgBackgroundImage\"><img src={svgImage} alt=\"logo\" /></div>\r\n                    <div className=\"backSVGImage\">\r\n                        <img src={svgImageBack} alt=\"svgBackground\" />\r\n                    </div>\r\n\r\n                    <div className=\"infoShowerMain\">\r\n                        {\r\n                            contextData.isLogin === true ?\r\n                                <>\r\n                                    <DataShowerSimp />\r\n                                    <TransactionShowerSimp />\r\n                                </> :\r\n                                <>\r\n                                    <DataShower />\r\n                                    <TransactionShower />\r\n                                </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <>\r\n            <div className=\"mainLoader\">\r\n                <div className=\"subLoader\">\r\n                    <div className=\"loaderText\">V</div>\r\n                </div>\r\n                <div className=\"animatorDiv\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loading;","import { ethers } from 'ethers';\r\nimport { useContext, useState, useRef } from 'react'\r\nimport { UserDataContext } from '../../../App';\r\nimport Loading from '../../Loading';\r\n\r\nconst SendETH = () => {\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n    const contract = contextData.contractData;\r\n    const [confirmCode, setConfirmCode] = useState(null)\r\n    const isLoading = useRef(false);\r\n    const [infoMistakes, setInfoMistakes] = useState(\"No Mistakes\");\r\n    console.log(contract)\r\n\r\n    let infoBlockStyle;\r\n\r\n    const changeElemData = (message, isProcessing) => {\r\n        setInfoMistakes(message)\r\n        if (isProcessing === true) {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:#3c3c3c;background-color:#d1ffd1;`;\r\n        } else {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:red;background-color:#ffd0d0;`;\r\n        }\r\n    }\r\n\r\n    const sendNotification = (notificationData) => {\r\n        return new Promise(async (res, rej) => {\r\n            if (Notification.permission === \"denied\") {\r\n                alert(notificationData.errorMess)\r\n                res(false);\r\n            }\r\n            else if (Notification.permission === \"default\") {\r\n                await Notification.requestPermission();\r\n                const greeting = new Notification('Hi, How are you?');\r\n                console.log(greeting)\r\n            }\r\n            else {\r\n                const greeting = new Notification(notificationData.title, {\r\n                    body: notificationData.code\r\n                    // body: 'Have a good day',\r\n                    // icon: './img/goodday.png'\r\n                });\r\n                console.log(greeting)\r\n            }\r\n            res(true);\r\n        })\r\n    }\r\n\r\n    const dataValidation = (reqData) => {\r\n        return new Promise((res, rej) => {\r\n            if (reqData.to === \"\" || reqData.amount === \"\") {\r\n                changeElemData(\"Input Fields Are Empty\", false);\r\n            } else if (isNaN(parseInt(reqData.amount))) {\r\n                changeElemData(\"Invalid Amount\", false);\r\n            } else if (reqData.amount > (userData.balance)) {\r\n                changeElemData(\"Insufficient Balance\", false);\r\n            } else if (ethers.utils.isAddress(reqData.address) === false) {\r\n                changeElemData(\"Invalid Address\", false);\r\n            } else {\r\n                res(true);\r\n                document.getElementsByClassName(\"mistakeShower\")[0].style = \"width:0%;\"\r\n            }\r\n            res(false);\r\n        })\r\n    }\r\n\r\n    // const resendCode = async () => {\r\n    //     let digits = '0123456789';\r\n    //     let randomCode = '';\r\n    //     for (let i = 0; i < 4; i++) {\r\n    //         randomCode += digits[Math.floor(Math.random() * 10)];\r\n    //     }\r\n    //     let notificationData = {\r\n    //         title: \"Confirmation Code\",\r\n    //         code: randomCode,\r\n    //         errorMess: \"Please Allow For Notifications, We Will Send Confirmation Code Via Notification\"\r\n    //     }\r\n    //     await sendNotification(notificationData);\r\n    //     setConfirmCode(randomCode)\r\n    // }\r\n\r\n    const sendMoney = async () => {\r\n        let reqData = {\r\n            address: document.getElementsByClassName(\"sendETHAddress\")[0].value,\r\n            amount: document.getElementsByClassName(\"sendETHAmount\")[0].value\r\n        }\r\n        console.log(reqData)\r\n        if (await dataValidation(reqData) === true) {\r\n            if (confirmCode === null) {\r\n                let digits = '0123456789';\r\n                let randomCode = '';\r\n                for (let i = 0; i < 4; i++) {\r\n                    randomCode += digits[Math.floor(Math.random() * 10)];\r\n                }\r\n                let notificationData = {\r\n                    title: \"Confirmation Code\",\r\n                    code: randomCode,\r\n                    errorMess: \"Please Allow For Notifications, We Will Send Confirmation Code Via Notification\"\r\n                }\r\n\r\n                if (await sendNotification(notificationData) === true) {\r\n                    document.getElementsByClassName(\"confirmCode\")[0].style = `visibility:visible;opacity:1;margin-top:1.5rem;`;\r\n                    document.getElementsByClassName(\"sendETHSubmitBTN\")[0].style.marginTop = \"3rem\";\r\n                    setConfirmCode(randomCode)\r\n                }\r\n            }\r\n            else {\r\n                if (document.getElementsByClassName(\"sendETHCode\")[0].value === confirmCode) {\r\n                    if (await dataValidation(reqData) === true) {\r\n                        isLoading.current = true;\r\n                        setConfirmCode(null);\r\n                        changeElemData(\"Wait....\", true);\r\n                        try {\r\n                            let res;\r\n                            try {\r\n                                res = await contract.sendMoney(reqData.address, { value: ethers.utils.parseEther(reqData.amount) });\r\n                                console.log(await res.wait());\r\n                            } catch (error) {\r\n                                changeElemData(\"Transaction Rejected\", false);\r\n                                isLoading.current = false;\r\n                                return;\r\n                            }\r\n\r\n                            let tempUserRecords = await contract.myRecords();\r\n                            let dataToSend = {\r\n                                address: reqData.address,\r\n                                transBlockNumber: res.blockNumber,\r\n                                data: {\r\n                                    addr: userData.address,\r\n                                    amount: tempUserRecords[tempUserRecords.length - 1].amount,\r\n                                    time: tempUserRecords[tempUserRecords.length - 1].time,\r\n                                    isReceived: true\r\n                                }\r\n                            }\r\n                            console.log(tempUserRecords);\r\n                            console.log(dataToSend);\r\n\r\n                            const requestOptions = {\r\n                                method: 'POST',\r\n                                credentials: \"include\", // Remove Or Comment Out In Deployment.\r\n                                headers: { 'Content-Type': 'application/json' },\r\n                                body: JSON.stringify(dataToSend)\r\n                            };\r\n                            let response = await fetch('/storeReceiverData', requestOptions) // Remove \"http://localhost:8000\" In Deployment. \r\n                            let data = await response.json()\r\n                            console.log(data)\r\n\r\n                            console.log(parseInt(document.getElementsByClassName(\"sendETHCode\")[0].value), confirmCode)\r\n                            document.getElementsByClassName(\"sendETHAddress\")[0].value = \"\";\r\n                            document.getElementsByClassName(\"sendETHAmount\")[0].value = \"\";\r\n                            document.getElementsByClassName(\"sendETHCode\")[0].value = \"\";\r\n                            document.getElementsByClassName(\"confirmCode\")[0].style = `opacity:0;visibility:hidden;margin-top:0rem;`;\r\n                            document.getElementsByClassName(\"sendETHSubmitBTN\")[0].style.marginTop = \"0rem\";\r\n                            console.log(res);\r\n                            window.location.reload(true);\r\n                        } catch (error) {\r\n                            changeElemData(\"Something Went Wrong\", false);\r\n                            isLoading.current = false;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    changeElemData(\"Invalid Code\", false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 490)) {\r\n            let newWidth = Math.round((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 90) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n    return (\r\n        <>\r\n            <div className=\"sendETHBody\">\r\n                {\r\n                    contract === null ? <></> : <div className=\"sendETHMain\">\r\n                        <div className=\"dataShowerHeading sendETHHeading\"><i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i> ETH</div>\r\n                        <div className=\"mistakeShower\">\r\n                            {infoMistakes}\r\n                        </div>\r\n                        <div style={{ marginTop: \"0rem\" }} className=\" dataShowerInfoBlock\">\r\n                            <div className=\"infoBlockHeading\">Address</div>\r\n                            <input style={infoBlockStyle} type=\"text\" placeholder=\"Enter Receiver Address\" className=\"sendETHAddress sendETHTakeInfo\" />\r\n                        </div>\r\n\r\n                        <div style={{ marginTop: \"2rem\" }} className=\" dataShowerInfoBlock\">\r\n                            <div className=\"infoBlockHeading\">Amount</div>\r\n                            <input style={infoBlockStyle} type=\"number\" placeholder=\"Enter Amount To Send\" className=\"sendETHAmount sendETHTakeInfo\" />\r\n                        </div>\r\n\r\n                        <div className=\" confirmCode dataShowerInfoBlock\">\r\n                            <div className=\"infoBlockHeading\">Code</div>\r\n                            <input style={infoBlockStyle} type=\"number\" placeholder=\"Enter Confirmation Code\" className=\"sendETHCode sendETHTakeInfo\" />\r\n                        </div>\r\n\r\n                        <div className=\"submitBTNMain\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div onClick={() => sendMoney()} className=\"sendETHSubmitBTN\">\r\n                                Transfer\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n            {\r\n                isLoading.current === true ? <Loading /> : <></>\r\n            }\r\n            {/* <button onClick={() => sendNotification(\"Hello\")}>Click</button> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendETH;","import { useContext, useState, useRef } from 'react'\r\nimport { ethers } from 'ethers';\r\nimport { UserDataContext } from '../../../App';\r\nimport Loading from '../../Loading';\r\n\r\nconst SendETHSimp = () => {\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n    const [confirmCode, setConfirmCode] = useState(null);\r\n    const isLoading = useRef(false);\r\n    const [infoMistakes, setInfoMistakes] = useState(\"No Mistakes\");\r\n\r\n    let infoBlockStyle;\r\n\r\n    const changeElemData = (message, isProcessing) => {\r\n        setInfoMistakes(message)\r\n        if (isProcessing === true) {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:#3c3c3c;background-color:#d1ffd1;`;\r\n        } else {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:red;background-color:#ffd0d0;`;\r\n        }\r\n    }\r\n\r\n    const sendNotification = (notificationData) => {\r\n        return new Promise(async (res, rej) => {\r\n            if (Notification.permission === \"denied\") {\r\n                alert(notificationData.errorMess)\r\n                res(false);\r\n            }\r\n            else if (Notification.permission === \"default\") {\r\n                await Notification.requestPermission();\r\n                const greeting = new Notification('Hi, How are you?');\r\n                console.log(greeting)\r\n            }\r\n            else {\r\n                const greeting = new Notification(notificationData.title, {\r\n                    body: notificationData.code\r\n                    // body: 'Have a good day',\r\n                    // icon: './img/goodday.png'\r\n                });\r\n                console.log(greeting)\r\n            }\r\n            res(true);\r\n        })\r\n    }\r\n\r\n    const dataValidation = (reqData) => {\r\n        return new Promise((res, rej) => {\r\n            if (reqData.to === \"\" || reqData.amount === \"\" || reqData.password === \"\") {\r\n                changeElemData(\"Input Fields Are Empty\", false);\r\n            } else if (isNaN(parseInt(reqData.amount))) {\r\n                changeElemData(\"Invalid Amount\", false);\r\n            } else if (reqData.amount > (userData.balance)) {\r\n                changeElemData(\"Insufficient Balance\", false);\r\n            } else if (ethers.utils.isAddress(reqData.to) === false) {\r\n                changeElemData(\"Invalid Address\", false);\r\n            } else if (reqData.password.length < 8) {\r\n                changeElemData(\"Invalid Password\", false);\r\n            }\r\n            else {\r\n                res(true);\r\n                document.getElementsByClassName(\"mistakeShower\")[0].style = \"width:0%;\"\r\n            }\r\n            res(false);\r\n        })\r\n    }\r\n\r\n    // const resendCode = async () => {\r\n    //     let digits = '0123456789';\r\n    //     let randomCode = '';\r\n    //     for (let i = 0; i < 4; i++) {\r\n    //         randomCode += digits[Math.floor(Math.random() * 10)];\r\n    //     }\r\n    //     let notificationData = {\r\n    //         title: \"Confirmation Code\",\r\n    //         code: randomCode,\r\n    //         errorMess: \"Please Allow For Notifications, We Will Send Confirmation Code Via Notification\"\r\n    //     }\r\n    //     await sendNotification(notificationData);\r\n    //     setConfirmCode(randomCode)\r\n    // }\r\n\r\n    const sendRequest = async () => {\r\n        let reqData = {\r\n            to: document.getElementsByClassName(\"sendETHAddress\")[0].value,\r\n            amount: document.getElementsByClassName(\"sendETHAmount\")[0].value,\r\n            password: document.getElementsByClassName(\"sendETHPassword\")[0].value,\r\n        }\r\n        if (await dataValidation(reqData) === true) {\r\n            let wei = ethers.utils.parseEther(reqData.amount); // Converting Ethers To Wei, Visit \"https://docs.ethers.io/v4/api-utils.html\" For More Info.\r\n            reqData.amount = wei.toString();\r\n\r\n            isLoading.current = true;\r\n            setConfirmCode(null);\r\n            changeElemData(\"Wait....\", true);\r\n\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                credentials: \"include\", // Remove Or Comment Out In Deployment.\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(reqData)\r\n            };\r\n\r\n            let response = await fetch('/sendETH', requestOptions) // Remove \"http://localhost:8000\" In Deployment. \r\n            let data = await response.json()\r\n            console.log(data)\r\n            isLoading.current = false;\r\n\r\n            if (data.isDone === true) {\r\n                changeElemData(data.message, true);\r\n                window.location.reload(true);\r\n            }\r\n            else {\r\n                changeElemData(data.message, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const sendMoney = async () => {\r\n        let reqData = {\r\n            to: document.getElementsByClassName(\"sendETHAddress\")[0].value,\r\n            amount: document.getElementsByClassName(\"sendETHAmount\")[0].value,\r\n            password: document.getElementsByClassName(\"sendETHPassword\")[0].value,\r\n        }\r\n        console.log(reqData)\r\n        if (await dataValidation(reqData) === true) {\r\n            reqData.amount = ethers.utils.parseEther(reqData.amount);\r\n            console.log(reqData)\r\n            if (confirmCode === null) {\r\n                let digits = '0123456789';\r\n                let randomCode = '';\r\n                for (let i = 0; i < 4; i++) {\r\n                    randomCode += digits[Math.floor(Math.random() * 10)];\r\n                }\r\n                let notificationData = {\r\n                    title: \"Confirmation Code\",\r\n                    code: randomCode,\r\n                    errorMess: \"Please Allow For Notifications, We Will Send Confirmation Code Via Notification\"\r\n                }\r\n                if (await sendNotification(notificationData) === true) {\r\n                    document.getElementsByClassName(\"confirmCode\")[0].style = `visibility:visible;opacity:1;margin-top:1.5rem;`;\r\n                    document.getElementsByClassName(\"sendETHSubmitBTN\")[0].style.marginTop = \"3rem\";\r\n                    setConfirmCode(randomCode);\r\n                }\r\n            }\r\n            else {\r\n                if (document.getElementsByClassName(\"sendETHCode\")[0].value === confirmCode) {\r\n                    await sendRequest();\r\n                    // console.log(parseInt(document.getElementsByClassName(\"sendETHCode\")[0].value), confirmCode)\r\n                    // document.getElementsByClassName(\"sendETHAddress\")[0].value = \"\";\r\n                    // document.getElementsByClassName(\"sendETHAmount\")[0].value = \"\";\r\n                    // document.getElementsByClassName(\"sendETHPassword\")[0].value = \"\";\r\n                    document.getElementsByClassName(\"sendETHCode\")[0].value = \"\";\r\n                    document.getElementsByClassName(\"confirmCode\")[0].style = `opacity:0;visibility:hidden;margin-top:0rem;`;\r\n                    document.getElementsByClassName(\"sendETHSubmitBTN\")[0].style.marginTop = \"0rem\";\r\n                }\r\n                else {\r\n                    changeElemData(\"Invalid Code\", false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 490)) {\r\n            let newWidth = Math.round((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 90) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n    return (\r\n        <>\r\n            <div className=\"sendETHBody\">\r\n                <div className=\"sendETHMain\">\r\n                    <div className=\"dataShowerHeading sendETHHeading\"><i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i> ETH</div>\r\n                    <div className=\"mistakeShower\">\r\n                        {infoMistakes}\r\n                    </div>\r\n                    <div style={{ marginTop: \"0rem\" }} className=\" dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Address</div>\r\n                        <input style={infoBlockStyle} type=\"text\" placeholder=\"Enter Receiver Address\" className=\"sendETHAddress sendETHTakeInfo\" />\r\n                    </div>\r\n                    <div style={{ marginTop: \"2rem\" }} className=\" dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Amount</div>\r\n                        <input style={infoBlockStyle} type=\"number\" placeholder=\"Enter Amount To Send\" className=\"sendETHAmount sendETHTakeInfo\" />\r\n                    </div>\r\n                    <div style={{ marginTop: \"2rem\" }} className=\" dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Key</div>\r\n                        <input style={infoBlockStyle} type=\"password\" placeholder=\"Enter Your Key\" className=\"sendETHPassword sendETHTakeInfo\" />\r\n                    </div>\r\n                    <div className=\" confirmCode dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Code</div>\r\n                        <input style={infoBlockStyle} type=\"number\" placeholder=\"Enter Confirmation Code\" className=\"sendETHCode sendETHTakeInfo\" />\r\n                    </div>\r\n                    <div className=\"submitBTNMain\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                        <div onClick={() => sendMoney()} className=\"sendETHSubmitBTN\">\r\n                            Transfer\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                isLoading.current === true ? <Loading /> : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendETHSimp;","export default __webpack_public_path__ + \"static/media/metamaskLogo.dabbc866.png\";","import React, { useContext } from \"react\";\r\nimport metamaskLogo from \".././icons/metamaskLogo.png\";\r\nimport { loginData } from \".././App\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Header = () => {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const contextData = useContext(loginData);\r\n    console.log(contextData)\r\n\r\n    const logout = async (isLogout) => {\r\n        let response = await fetch('/logout', { credentials: \"include\" })\r\n        await response.json() // Provides JSON Data   \r\n        if (isLogout === true) {\r\n            history.push(\"/login\");\r\n        }\r\n        window.location.reload(true);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"headerMainTop\">\r\n                <div className=\"headerSub\">\r\n                    <h1 className=\"mainTitle\"><span style={{ cursor: \"pointer\" }}>VARt</span> <span className=\"subTitle\">Eth</span></h1>\r\n                </div>\r\n                {\r\n                    location.pathname === \"/\" ?\r\n                        <div className=\"operationDiv\">\r\n                            {\r\n                                contextData.isMetamask === true && contextData.isLogin === true ?\r\n                                    <div className=\"operationBtn1\">\r\n                                        <img onClick={() => logout(false)} src={metamaskLogo} alt=\"Metamask\" />\r\n                                    </div> :\r\n                                    <></>\r\n                            }\r\n                            {\r\n                                contextData.isLogin === true ?\r\n                                    <div className=\"operationBtn2\">\r\n                                        <i onClick={() => logout(true)} className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n                                    </div> :\r\n                                    <div className=\"operationBtn2\">\r\n                                        <Link style={{ textDecoration: \"none\", color: \"inherit\" }} to=\"/login\"><i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i></Link>\r\n                                    </div>\r\n                            }\r\n                        </div> :\r\n                        <></>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport Loading from \"../Loading\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Signup = () => {\r\n    const isOTPCheck = useRef(false);\r\n    const [infoMistakes, setInfoMistakes] = useState(\"No Mistakes\");\r\n    const isLoading = useRef(false);\r\n\r\n    const changeElemData = (message, isProcessing) => {\r\n        setInfoMistakes(message)\r\n        if (isProcessing === true) {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;width:100%;color:#3c3c3c;background-color:#d1ffd1;`;\r\n        } else {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;width:100%;color:red;background-color:#ffd0d0;`;\r\n        }\r\n    }\r\n\r\n    const checkIsValidInfo = () => {\r\n        return new Promise((res, rej) => {\r\n            let inputElem = document.getElementsByClassName(\"takeInfoBlock\");\r\n            if (((inputElem[0].value === \"\") && (inputElem[1].value === \"\"))) {\r\n                changeElemData(\"Fill All Details\", false)\r\n            } else if ((inputElem[0].value === \"\")) {\r\n                changeElemData(\"Username Field Is Empty\", false)\r\n            } else if ((inputElem[1].value === \"\")) {\r\n                changeElemData(\"Email Field Is Empty\", false)\r\n            } else if ((inputElem[2].value === \"\")) {\r\n                changeElemData(\"Password Field Is Empty\", false)\r\n            } else if ((inputElem[2].value.length < 8)) {\r\n                changeElemData(\"Password Is Too Small \", false)\r\n            } else if ((inputElem[0].value.length >= 35)) {\r\n                changeElemData(\"Username Is Too Large\", false)\r\n            } else if (inputElem[0].value.indexOf(\"@\") !== -1) {\r\n                changeElemData(\"Username Should Not Have @\", false)\r\n            } else if ((((inputElem[0].value.length !== inputElem[0].value.replace(/ /g, '')).length) || ((inputElem[2].value.length !== inputElem[2].value.replace(/ /g, '')).length))) { // Visit \"https://stackoverflow.com/questions/6623231/remove-all-white-spaces-from-text\" For More Info About How To Remove All Whitespace From String.\r\n                if (((inputElem[2].value.length !== inputElem[2].value.replace(/ /g, '')).length)) {\r\n                    changeElemData(\"Password Have White Spaces\", false)\r\n                }\r\n                else {\r\n                    changeElemData(\"Username Have White Spaces\", false)\r\n                }\r\n            }\r\n            else {\r\n                if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(inputElem[1].value)) {\r\n                    res(true);\r\n                }\r\n                else {\r\n                    changeElemData(\"Invalid Email\", false)\r\n                }\r\n            }\r\n            res(false);\r\n        })\r\n    }\r\n\r\n    const sendSignUpRequest = async () => {\r\n        if (await checkIsValidInfo() === true) {\r\n            let userName = document.getElementsByClassName(\"takeInfoBlock\")[0].value;\r\n            let email = document.getElementsByClassName(\"takeInfoBlock\")[1].value;\r\n            let password = document.getElementsByClassName(\"takeInfoBlock\")[2].value;\r\n            isLoading.current = true;\r\n            changeElemData(\"Wait....\", true);\r\n            localStorage.setItem(\"userMail\", email); // Here We Will Store User Mail Id In Local Storage, We Will Use Them For OTP Checking And Send It To Server With Entered OTP.\r\n\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                credentials: \"include\", // Remove Or Comment Out In Deployment.\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    userName: userName,\r\n                    email: email,\r\n                    password: password\r\n                })\r\n            };\r\n            let response = await fetch('/signup', requestOptions) // Remove \"http://localhost:8000\" In Deployment. \r\n            let data = await response.json()\r\n            console.log(data)\r\n            isLoading.current = false;\r\n\r\n            if (data.isValid === undefined) {\r\n                localStorage.removeItem(\"userMail\");\r\n                changeElemData(data.message, false);\r\n            }\r\n            else {\r\n                isOTPCheck.current = true;\r\n                changeElemData(\"OTP Sended On Mail Id\", true);\r\n            }\r\n\r\n        } else {\r\n            console.log(\"Fill Details Properly\")\r\n        }\r\n    }\r\n\r\n    const checkOTP = async () => {\r\n        let inputElem = document.getElementsByClassName(\"takeInfoBlock\");\r\n        if ((inputElem[0].value.length !== 6) || ((inputElem[0].value.length !== inputElem[0].value.replace(/ /g, '')).length)) {\r\n            console.log(\"Op\")\r\n            changeElemData(\"Invalid OTP\", false);\r\n        } else {\r\n            let email = localStorage.getItem(\"userMail\");\r\n            if ((email === undefined) || (email === null) || (email.length < 2) || (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) !== true)) {\r\n                console.log(\"Op\")\r\n                changeElemData(\"Invalid OTP\", false)\r\n            } else {\r\n                isLoading.current = true;\r\n                changeElemData(\"Wait....\", true);\r\n                const requestOptions = {\r\n                    method: 'POST',\r\n                    credentials: \"include\", // Remove Or Comment Out In Deployment.\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        email: email,\r\n                        otp: inputElem[0].value\r\n                    })\r\n                };\r\n                let response = await fetch('/signup/emailValidation', requestOptions) // Remove \"http://localhost:8000\" In Deployment. \r\n                let data = await response.json()\r\n                console.log(data)\r\n                isLoading.current = false;\r\n\r\n                if (data.privateKey === undefined) {\r\n                    changeElemData(data.message, false);\r\n                }\r\n                else {\r\n                    localStorage.removeItem(\"userMail\");\r\n                    changeElemData(data.message, true);\r\n                    window.location.reload(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <> {isOTPCheck.current === false ?\r\n            // This Group Of Code Is Used For Taking information's From User. It Will Take UserName, Email ID, And Password.\r\n            <>\r\n                <div className=\"mainDiv\">\r\n                    <div className=\"mainFormContainer\">\r\n                        <div className=\"subFormContainer\">\r\n                            <div className=\"formContainerHeading \">Sign Up</div>\r\n                            <div className=\"mistakeShower\">\r\n                                {infoMistakes}\r\n                            </div>\r\n\r\n                            <div id=\"dataTakerBlock1\" className=\"dataShowerInfoBlock\">\r\n                                <div className=\"infoBlockHeading takeInfo\">Username</div>\r\n                                <input type=\"text\" placeholder=\"Enter Unique Username\" className=\"takeInfoBlock\" />\r\n                            </div>\r\n\r\n                            <div id=\"dataTakerBlock2\" style={{ marginTop: \"2rem\" }} className=\"dataShowerInfoBlock\">\r\n                                <div className=\"infoBlockHeading takeInfo\">Email</div>\r\n                                <input type=\"text\" placeholder=\"Enter Email ID\" className=\"takeInfoBlock\" />\r\n                            </div>\r\n\r\n                            <div id=\"dataTakerBlock3\" style={{ marginTop: \"2rem\" }} className=\"dataShowerInfoBlock\">\r\n                                <div className=\"infoBlockHeading takeInfo\">Password</div>\r\n                                <input type=\"password\" placeholder=\"Enter Secure Password\" className=\"takeInfoBlock\" />\r\n                            </div>\r\n\r\n                            <div className=\"submitBTNMain\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                <div onClick={() => sendSignUpRequest()} className=\"submitBTN\">\r\n                                    Create\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ marginTop: \"1.5rem\", textAlign: \"center\", fontSize: \"1.3rem\", fontFamily: \"'Source Sans Pro', sans-serif\" }}>\r\n                            <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/login\">Already Have Account</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </> :\r\n            <><div className=\"mainDiv\">\r\n                <div className=\"mainFormContainer\">\r\n                    <div className=\"subFormContainer\">\r\n                        <div className=\"formContainerHeading \">Sign Up</div>\r\n                        <div className=\"mistakeShower\">\r\n                            {infoMistakes}\r\n                        </div>\r\n                        <div style={{ marginTop: \"2rem\" }} id=\"dataTakerBlock1\" className=\"dataShowerInfoBlock\">\r\n                            <div className=\"infoBlockHeading takeInfo\">OTP</div>\r\n                            <input type=\"number\" placeholder=\"Enter OTP\" className=\"takeInfoBlock\" />\r\n                        </div>\r\n                        <div className=\"submitBTNMain\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div onClick={() => checkOTP()} className=\"submitBTN\">\r\n                                Create\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div></>}\r\n\r\n            {\r\n                isLoading.current === true ? <Loading /> : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport Loading from \"./Loading\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Login = () => {\r\n    const [infoMistakes, setInfoMistakes] = useState(\"No Mistakes\"); // This State Wil Contains Mistake Message.\r\n    const isLoading = useRef(false);\r\n\r\n    const changeElemData = (message, isProcessing) => { // This Function Will Actually Change Properties Or Styling Of \"Mistake Shower Div\".\r\n        setInfoMistakes(message)\r\n        if (isProcessing === true) {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:#3c3c3c;background-color:#d1ffd1;`;\r\n        } else {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:red;background-color:#ffd0d0;`;\r\n        }\r\n    }\r\n\r\n    const checkInfo = () => {\r\n        return new Promise((res, rej) => {\r\n            const authData = document.getElementsByClassName(\"takeInfoBlock\")[0].value\r\n            if (authData === \"\" || document.getElementsByClassName(\"takeInfoBlock\")[1].value === \"\") {\r\n                changeElemData(\"Please Fill Add Details\", false)\r\n                res(false)\r\n            } else if (((ethers.utils.isAddress(authData) === true) || (authData.indexOf(\"@\") !== -1) || (authData.length < 35))) {\r\n                res(true)\r\n            } else {\r\n                changeElemData(\"Invalid Details\", false)\r\n                res(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    const sendInfo = async () => {\r\n        if (await checkInfo() === true) {\r\n            let authData = document.getElementsByClassName(\"takeInfoBlock\")[0].value;\r\n            let password = document.getElementsByClassName(\"takeInfoBlock\")[1].value;\r\n            isLoading.current = true;\r\n            changeElemData(\"Wait....\", true);\r\n\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                credentials: \"include\", // Remove Or Comment Out In Deployment.\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    authData: authData,\r\n                    password: password\r\n                })\r\n            };\r\n            let response = await fetch('/login', requestOptions) // Remove \"http://localhost:8000\" In Deployment. \r\n            let data = await response.json()\r\n            console.log(data)\r\n            isLoading.current = false;\r\n\r\n            if (data.isValid === true) {\r\n                changeElemData(\"Done\", true);\r\n                window.location.reload(true);\r\n            }\r\n            else {\r\n                changeElemData(data.message, false);\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <>\r\n                <div className=\"mainDiv\">\r\n                    <div className=\"mainFormContainer\">\r\n                        <div className=\"subFormContainer\">\r\n                            <div className=\"formContainerHeading \">Login</div>\r\n                            <div className=\"mistakeShower\">\r\n                                {infoMistakes}\r\n                            </div>\r\n                            <div style={{ margin: \"0rem 1rem 0rem 1rem\" }} id=\"dataTakerBlock1\" className=\"dataShowerInfoBlock\">\r\n                                <input style={{ paddingLeft: \"3rem\" }} type=\"text\" placeholder=\"Username, Email, Or Address\" className=\"takeInfoBlock\" />\r\n                            </div>\r\n                            <div style={{ margin: \"2rem 1rem 0rem 1rem\" }} id=\"dataTakerBlock1\" className=\"dataShowerInfoBlock\">\r\n                                <input style={{ paddingLeft: \"3rem\" }} type=\"password\" placeholder=\"Password, Or Private Key\" className=\"takeInfoBlock\" />\r\n                            </div>\r\n\r\n                            <div className=\"submitBTNMain\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                <div onClick={() => sendInfo()} className=\"submitBTN\">\r\n                                    Submit\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ marginTop: \"1.5rem\", textAlign: \"center\", fontSize: \"1.3rem\", fontFamily: \"'Source Sans Pro', sans-serif\" }}>\r\n                            <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/signup\">Create New Account</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n            {\r\n                isLoading.current === true ? <Loading /> : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <>\r\n            <div className=\"div1\">\r\n                <div className=\"div2\">\r\n                    <div className=\"op40 err1\">\r\n                        <h1>4</h1>\r\n                    </div>\r\n                    <div className=\"op41 err1\">\r\n                        <h1>0</h1>\r\n                    </div>\r\n                    <div className=\"op42 err1\">\r\n                        <h1>4</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"message1\">\r\n                    <h1>Something Went Wrong</h1>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Error404;","import React, { useState, useRef, useEffect, createContext } from 'react';\nimport './App.css'\nimport { ethers } from \"ethers\";\nimport moneyTransfer from './contract/moneyTransfer.json';\nimport Dashboard from './components/DashBoard/Dashboard'\nimport SendETH from './components/DashBoard/MetamaskLogin/SendETH';\nimport SendETHSimp from './components/DashBoard/SimpleLogin/SendETHSimp';\nimport Loading from './components/Loading';\nimport Header from \"./components/Header\";\nimport SignUp from './components/SignUp/Signup';\nimport Login from \"./components/Login\";\nimport Error404 from './components/Error404';\nimport { Route, Switch, useHistory, useLocation } from \"react-router-dom\";\n\nimport io from \"socket.io-client\";\nconst socket = io.connect('/'); // Replace This URL To '/' In Deployment, If Front End Is Deployed On Same Server. In Case Of Different Domain Of Server Use Its Domain\n\nconst UserDataContext = createContext();\nconst loginData = createContext();\n\nfunction App() {\n  //location.reload();\n  const [userData, setUserData] = useState(null);\n  const [ETHContract, setETHContract] = useState(null);\n  const [isMetamask, setIsMetamask] = useState(null);\n  const isLogin = useRef(false);\n  const history = useHistory();\n  const location = useLocation();\n\n  const reloadPage = () => {\n    window.location.reload();\n  }\n\n  if (window.ethereum) { // This Statement Will Caught When Metamask Account Will Changed.\n    window.ethereum.on('accountsChanged', () => reloadPage());\n  }\n\n  useEffect( () => {\n    const initialProcessing=async()=>\n    {\n     // This Fetch Statement Will Send Request And Then Receive Info About Whether Cookie Contains Token Or Valid Token.\n    // If Response Will True So It Means Uses Has Created Account And They Can Use This App Without Metamask.\n    // If Response Will False So User Has To Create Account For Using App.\n    let response = await fetch('/isLogin', { credentials: \"include\" })\n    let data = await response.json() // Provides JSON Data\n    isLogin.current = data.message; // Response Stored In \"isLogin\" useRef.\n    console.log(data);\n\n\n    if ((window.ethereum !== undefined) && (isLogin.current === false)) { // This Statement Checks That Whether User Have Metamask Or Not, \n      //If There Is A Metamask And Cookie Does Not Contains Token Then Statement Written Inside Will Execute. \n      setIsMetamask(true);\n\n      const provider = new ethers.providers.Web3Provider(\n        window.ethereum\n      );\n\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      let contract = new ethers.Contract('0x5149609a8e02B4A86D52249C58811C202972a546', moneyTransfer.abi, signer)\n\n      setETHContract(contract);\n      // await contract.sendMoney('0x58A7F5F4715333b6185Ef1AF19bC2e42fCB4b55f', { value: \"1000000000000000000\" });\n      console.log(moneyTransfer.abi)\n      let fetchedData = {\n        address: await signer.getAddress(),\n        balance: ethers.utils.formatEther(await signer.getBalance()),\n        transactions: await contract.myRecords()\n      }\n      setUserData(fetchedData);\n    }\n    else {\n      // If There Will Be Not Metamask Installed Then setIsMetamask Will Set To False Otherwise True.\n      if ((window.ethereum === undefined)) {\n        setIsMetamask(false);\n        console.log(window.ethereum)\n      } else {\n        setIsMetamask(true);\n        console.log(window.ethereum)\n      }\n\n      // If isLogin Value Will Be False So It Indicates That There Is Not Cookie Available And User Is Not Log, In This Situation Page Will Redirect To \"/signup\" Otherwise Page Will Redirect To \"/\" Or Main Page.\n      if (isLogin.current === false) {\n        if (location.pathname !== \"/signup\") {\n          history.push('/login');\n        }\n      }\n      else {\n        history.push('/');\n        let response = await fetch('/getInfo', { credentials: \"include\" })\n        let userDataOp = await response.json()\n        setUserData(userDataOp.data);\n      }\n    }\n    }\n    initialProcessing();\n  }, [])\n\n\n  return (\n    <>\n      <loginData.Provider value={{ isLogin: isLogin.current, isMetamask: isMetamask }}>\n        <Header />\n\n        <Switch>\n          <Route exact path='/login'>\n            <Login />\n          </Route>\n          <Route exact path='/signup'>\n            <SignUp />\n          </Route>\n          <Route exact path='/'>\n            <UserDataContext.Provider value={{ userInfo: userData, contractData: ETHContract }}>\n              <Dashboard />\n              {\n                userData === null ? <Loading /> : isLogin.current === true ? <SendETHSimp /> : <SendETH />\n              }\n\n            </UserDataContext.Provider>\n          </Route>\n          <Route>\n            <Error404 />\n          </Route>\n        </Switch>\n      </loginData.Provider>\n    </>\n  )\n}\n\nexport default App\nexport { UserDataContext, loginData } // Exporting Context\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n      <App /> \n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}