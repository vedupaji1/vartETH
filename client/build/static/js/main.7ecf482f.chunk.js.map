{"version":3,"sources":["svgImages/moneyTransfer.svg","svgImages/mainSvgBackground.svg","components/DashBoard/MetamaskLogin/DataShower.jsx","components/DashBoard/MetamaskLogin/TransactionShower.jsx","components/DashBoard/SimpleLogin/DataShowerSimp.jsx","components/DashBoard/SimpleLogin/TransactionShowerSimp.jsx","components/DashBoard/Dashboard.jsx","components/Loading.jsx","components/DashBoard/VARtETH.png","components/DashBoard/MetamaskLogin/SendETH.jsx","components/DashBoard/SimpleLogin/SendETHSimp.jsx","icons/metamaskLogo.png","components/Header.jsx","components/SignUp/Signup.jsx","components/Login.jsx","components/Error404.jsx","App.js","index.js"],"names":["DataShower","infoBlockStyle","userData","useContext","UserDataContext","userInfo","document","getElementsByTagName","offsetWidth","newWidth","width","getHeightForInfo","className","style","address","balance","transactions","length","TransactionShower","getTransactionTime","time","transTime","Date","getHours","getMinutes","getTransactionDate","curTime","getDate","getMonth","getFullYear","Math","round","onMouseOver","getElementsByClassName","offsetHeight","overflowY","onMouseOut","slice","reverse","map","data","i","display","paddingTop","paddingBottom","isReceived","flexDirection","color","marginTop","ethers","utils","formatEther","amount","backgroundColor","addr","DataShowerSimp","userName","email","undefined","TransactionShowerSimp","_hex","Dashboard","contextData","loginData","src","svgImage","alt","svgImageBack","isLogin","Loading","SendETH","contract","contractData","useState","confirmCode","setConfirmCode","isLoading","useRef","infoMistakes","setInfoMistakes","changeElemData","message","isProcessing","sendNotification","notificationData","Promise","res","rej","a","Notification","permission","alert","errorMess","requestPermission","navigator","serviceWorker","getRegistration","then","reg","options","body","code","icon","VARtETHLogo","vibrate","dateOfArrival","now","primaryKey","showNotification","dataValidation","reqData","to","isNaN","parseInt","isAddress","sendMoney","value","randomCode","floor","random","title","current","parseEther","wait","myRecords","tempUserRecords","dataToSend","transBlockNumber","blockNumber","requestOptions","method","credentials","headers","JSON","stringify","fetch","response","json","window","location","reload","top","toString","type","placeholder","justifyContent","onClick","SendETHSimp","password","sendRequest","wei","isDone","Header","useLocation","history","useHistory","logout","isLogout","push","cursor","pathname","isMetamask","metamaskLogo","textDecoration","Signup","isOTPCheck","sendSignUpRequest","inputElem","indexOf","replace","test","localStorage","setItem","isValid","removeItem","console","log","checkOTP","getItem","otp","privateKey","userDataToStore","blob","Blob","FileSaver","saveAs","id","textAlign","fontSize","fontFamily","Login","sendInfo","authData","margin","paddingLeft","Error404","io","connect","createContext","App","setUserData","ETHContract","setETHContract","setIsMetamask","ethereum","on","useEffect","initialProcessing","provider","providers","Web3Provider","send","signer","getSigner","Contract","moneyTransfer","abi","getAddress","getBalance","fetchedData","userDataOp","Provider","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7ecf482f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/moneyTransfer.5bb7aaca.svg\";","export default __webpack_public_path__ + \"static/media/mainSvgBackground.c9a8acda.svg\";","import { useContext } from 'react'\r\nimport { UserDataContext } from '../../../App';\r\nconst DataShower = () => {\r\n\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n    let infoBlockStyle;\r\n  \r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 380)) {\r\n            let newWidth = ((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 80) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n    return (\r\n        <>\r\n            {\r\n                userData === null ? <></> : <div className=\"dataShowerMain\">\r\n                    <div className=\"dataShowerHeading\"><i className=\"fa fa-user\" aria-hidden=\"true\"></i></div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock firstDataShowerInfoBlock \">\r\n                        <div className=\"infoBlockHeading\">Address</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.address}</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Balance</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.balance} Eth</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">TOT</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.transactions.length} Transactions</div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataShower;","import { useContext } from 'react'\r\nimport { UserDataContext } from '../../../App';\r\nimport { ethers } from 'ethers';\r\nconst TransactionShower = () => {\r\n\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n\r\n    let infoBlockStyle;\r\n\r\n    const getTransactionTime = (time) => {\r\n        let transTime = new Date(time * 1000)\r\n        return (transTime.getHours() + \":\" + transTime.getMinutes());;\r\n    }\r\n\r\n    const getTransactionDate = (time) => {\r\n        let transTime = new Date(time * 1000)\r\n        let curTime = new Date();\r\n        let months = ['Jan', 'Feb', 'March', 'April', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\r\n        if ((curTime.getDate() === transTime.getDate()) && (curTime.getMonth() === transTime.getMonth()) && (curTime.getFullYear() === transTime.getFullYear())) {\r\n            return;\r\n        }\r\n        else {\r\n            return `${transTime.getDate()} ${months[transTime.getMonth()]} ${transTime.getFullYear()}`;\r\n        }\r\n    }\r\n\r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 380)) {\r\n            let newWidth = Math.round((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 80) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n\r\n    return (\r\n        <>\r\n            {\r\n                userData === null ? <></> : <div className=\"transShowerMain\">\r\n                    <div className=\"dataShowerHeading\"><i className=\"fa fa-exchange\"></i></div>\r\n                    <div onMouseOver={() => (\r\n                        document.getElementsByClassName(\"transactionContainer\")[0].offsetHeight >= 380 ?\r\n                            document.getElementsByClassName(\"transactionContainer\")[0].style.overflowY = \"scroll\" : <></>\r\n                    )} onMouseOut={() => (\r\n                        document.getElementsByClassName(\"transactionContainer\")[0].style.overflowY = \"hidden\"\r\n                    )} className='transactionContainer'>\r\n                        {\r\n                            userData.transactions.length === 0 ? <><div className=\"noTransactionShower\">No Transactions</div></> : userData.transactions.slice(0).reverse().map((data, i) => (\r\n                                <div key={i} className=\"transShowerInfoBlock\">\r\n                                    <div style={{ display: \"flex\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.3rem\", paddingBottom: \"0.3rem\" }}>\r\n                                            {\r\n                                                data.isReceived === true ?\r\n                                                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                        <i style={{ color: \"lime\" }} className=\"fa fa-chevron-up\"></i>\r\n                                                        <i style={{ marginTop: \"-0.5rem\", color: \"#97ff97\" }} className=\"fa fa-chevron-up\"></i>\r\n                                                    </div> :\r\n                                                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                        <i style={{ color: \"#ff787c\" }} className=\"fa fa-chevron-down\"></i>\r\n                                                        <i style={{ marginTop: \"-0.5rem\", color: \"#ff2a2a\" }} className=\"fa fa-chevron-down\"></i>\r\n                                                    </div>\r\n                                            }\r\n\r\n                                        </div>\r\n                                        <div className=\"infoBlockData\">{ethers.utils.formatEther(data.amount)} Eth</div>\r\n                                    </div>\r\n\r\n                                    <div style={{ display: \"flex\", backgroundColor: \"#9799d1\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.5rem\", paddingBottom: \"0.5rem\" }}>\r\n                                            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                {data.isReceived === true ? <span>From</span> : <span>To</span>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div style={infoBlockStyle} className=\"infoBlockData\">{data.addr}</div>\r\n                                    </div>\r\n\r\n                                    <div style={{ display: \"flex\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.3rem\", paddingBottom: \"0.3rem\" }}>\r\n                                            Date\r\n                                        </div>\r\n                                        <div className=\"infoBlockData\">{getTransactionTime(data.time)}&nbsp;&nbsp;&nbsp;&nbsp;{getTransactionDate(data.time)}</div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionShower;","import { useContext } from 'react'\r\nimport { UserDataContext } from '../../../App';\r\nconst DataShowerSimp = () => {\r\n\r\n    // Code Of This File Is Similar To \"./MetamaskLogin/DataShower\", We Can Use That File But For More Simplicity We Has Created This File And It Will Call Only When User Will Do Simple Login.\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n    let infoBlockStyle;\r\n  \r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 380)) {\r\n            let newWidth = ((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 80) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n    return (\r\n        <>\r\n            {\r\n                userData === null ? <></> : <div className=\"dataShowerMain\">\r\n                    <div className=\"dataShowerHeading\"><i className=\"fa fa-user\" aria-hidden=\"true\"></i></div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock firstDataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Address</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.userName}</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Address</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.email}</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Address</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.address}</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Balance</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.balance} Eth</div>\r\n                    </div>\r\n                    <div className=\"dataShowerAddress dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">TOT</div>\r\n                        <div style={infoBlockStyle} className=\"infoBlockData\">{userData.transactions !== undefined ? userData.transactions.length : 0} Transactions</div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataShowerSimp;","import { useContext } from 'react'\r\nimport { UserDataContext } from '../../../App';\r\nimport { ethers } from 'ethers';\r\nconst TransactionShowerSimp = () => {\r\n\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n \r\n    let infoBlockStyle;\r\n\r\n    const getTransactionTime = (time) => {\r\n        let transTime = new Date(time._hex * 1000)\r\n        return (transTime.getHours() + \":\" + transTime.getMinutes());;\r\n    }\r\n\r\n    const getTransactionDate = (time) => {\r\n        let transTime = new Date(time._hex * 1000)\r\n        let curTime = new Date();\r\n        let months = ['Jan', 'Feb', 'March', 'April', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\r\n        if ((curTime.getDate() === transTime.getDate()) && (curTime.getMonth() === transTime.getMonth()) && (curTime.getFullYear() === transTime.getFullYear())) {\r\n            return;\r\n        }\r\n        else {\r\n            return `${transTime.getDate()} ${months[transTime.getMonth()]} ${transTime.getFullYear()}`;\r\n        }\r\n    }\r\n\r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 380)) {\r\n            let newWidth = Math.round((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 80) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n\r\n    return (\r\n        <>\r\n            {\r\n                userData === null ? <></> : <div className=\"transShowerMain\">\r\n                    <div className=\"dataShowerHeading\"><i className=\"fa fa-exchange\"></i></div>\r\n                    <div onMouseOver={() => (\r\n                        document.getElementsByClassName(\"transactionContainer\")[0].offsetHeight >= 380 ?\r\n                            document.getElementsByClassName(\"transactionContainer\")[0].style.overflowY = \"scroll\" : <></>\r\n                    )} onMouseOut={() => (\r\n                        document.getElementsByClassName(\"transactionContainer\")[0].style.overflowY = \"hidden\"\r\n                    )} className='transactionContainer'>\r\n                        {\r\n                            userData.transactions.length === 0 ? <><div className=\"noTransactionShower\">No Transactions</div></> : userData.transactions.slice(0).reverse().map((data, i) => (\r\n                                <div key={i} className=\"transShowerInfoBlock\">\r\n                                    <div style={{ display: \"flex\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.3rem\", paddingBottom: \"0.3rem\" }}>\r\n                                            {\r\n                                                data.isReceived === true ?\r\n                                                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                        <i style={{ color: \"lime\" }} className=\"fa fa-chevron-up\"></i>\r\n                                                        <i style={{ marginTop: \"-0.5rem\", color: \"#97ff97\" }} className=\"fa fa-chevron-up\"></i>\r\n                                                    </div> :\r\n                                                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                        <i style={{ color: \"#ff787c\" }} className=\"fa fa-chevron-down\"></i>\r\n                                                        <i style={{ marginTop: \"-0.5rem\", color: \"#ff2a2a\" }} className=\"fa fa-chevron-down\"></i>\r\n                                                    </div>\r\n                                            }\r\n\r\n                                        </div>\r\n                                        <div className=\"infoBlockData\">{ethers.utils.formatEther(data.amount)} Eth</div>\r\n                                    </div>\r\n\r\n                                    <div style={{ display: \"flex\", backgroundColor: \"#9799d1\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.5rem\", paddingBottom: \"0.5rem\" }}>\r\n                                            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                                {data.isReceived === true ? <span>From</span> : <span>To</span>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div style={infoBlockStyle} className=\"infoBlockData\">{data.addr}</div>\r\n                                    </div>\r\n\r\n                                    <div style={{ display: \"flex\" }}>\r\n                                        <div className=\"infoBlockHeading\" style={{ paddingTop: \"0.3rem\", paddingBottom: \"0.3rem\" }}>\r\n                                            Date\r\n                                        </div>\r\n                                        <div className=\"infoBlockData\">{getTransactionTime(data.time)}&nbsp;&nbsp;&nbsp;&nbsp;{getTransactionDate(data.time)}</div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionShowerSimp;","import React, { useContext, useEffect } from \"react\";\r\nimport svgImage from '../../svgImages/moneyTransfer.svg';\r\nimport svgImageBack from '../../svgImages/mainSvgBackground.svg';\r\nimport DataShower from \"./MetamaskLogin/DataShower\";\r\nimport TransactionShower from \"./MetamaskLogin/TransactionShower\";\r\nimport DataShowerSimp from \"./SimpleLogin/DataShowerSimp\"\r\nimport TransactionShowerSimp from \"./SimpleLogin/TransactionShowerSimp\";\r\nimport { loginData } from \"../../App\"\r\n\r\nconst Dashboard = () => {\r\n    const contextData = useContext(loginData);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mainHeader\">\r\n                <div className=\"svgImageShower\">\r\n                    <div className=\"svgBackgroundImage\"><img src={svgImage} alt=\"logo\" /></div>\r\n                    <div className=\"backSVGImage\">\r\n                        <img src={svgImageBack} alt=\"svgBackground\" />\r\n                    </div>\r\n\r\n                    <div className=\"infoShowerMain\">\r\n                        {\r\n                            contextData.isLogin === true ?\r\n                                <>\r\n                                    <DataShowerSimp />\r\n                                    <TransactionShowerSimp />\r\n                                </> :\r\n                                <>\r\n                                    <DataShower />\r\n                                    <TransactionShower />\r\n                                </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <>\r\n            <div className=\"mainLoader\">\r\n                <div className=\"subLoader\">\r\n                    <div className=\"loaderText\">V</div>\r\n                </div>\r\n                <div className=\"animatorDiv\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loading;","export default __webpack_public_path__ + \"static/media/VARtETH.41393847.png\";","import { ethers } from 'ethers';\r\nimport { useContext, useState, useRef } from 'react'\r\nimport { UserDataContext } from '../../../App';\r\nimport Loading from '../../Loading';\r\nimport VARtETHLogo from '.././VARtETH.png';\r\n\r\nconst SendETH = () => {\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n    const contract = contextData.contractData;\r\n    const [confirmCode, setConfirmCode] = useState(null)\r\n    const isLoading = useRef(false);\r\n    const [infoMistakes, setInfoMistakes] = useState(\"No Mistakes\");\r\n\r\n    let infoBlockStyle;\r\n\r\n    const changeElemData = (message, isProcessing) => {\r\n        setInfoMistakes(message)\r\n        if (isProcessing === true) {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:#3c3c3c;background-color:#d1ffd1;`;\r\n        } else {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:red;background-color:#ffd0d0;`;\r\n        }\r\n    }\r\n\r\n    const sendNotification = (notificationData) => {\r\n        return new Promise(async (res, rej) => {\r\n            if (Notification.permission === \"denied\") {\r\n                alert(notificationData.errorMess)\r\n                res(false);\r\n            }\r\n            else if (Notification.permission === \"default\") {\r\n                await Notification.requestPermission();\r\n\r\n                navigator.serviceWorker.getRegistration().then(function (reg) {\r\n                    var options = {\r\n                        body: notificationData.code,\r\n                        icon: VARtETHLogo,\r\n                        vibrate: [100, 50, 100],\r\n                        data: {\r\n                            dateOfArrival: Date.now(),\r\n                            primaryKey: 1\r\n                        }\r\n                    };\r\n                    reg.showNotification(\"Confirmation Code\", options);\r\n                });\r\n\r\n            }\r\n            else {\r\n                navigator.serviceWorker.getRegistration().then(function (reg) {\r\n                    var options = {\r\n                        body: notificationData.code,\r\n                        icon: VARtETHLogo,\r\n                        vibrate: [100, 50, 100],\r\n                        data: {\r\n                            dateOfArrival: Date.now(),\r\n                            primaryKey: 1\r\n                        }\r\n                    };\r\n                    reg.showNotification(\"Confirmation Code\", options);\r\n                });\r\n            }\r\n            res(true);\r\n        })\r\n    }\r\n\r\n    const dataValidation = (reqData) => {\r\n        return new Promise((res, rej) => {\r\n            if (reqData.to === \"\" || reqData.amount === \"\") {\r\n                changeElemData(\"Input Fields Are Empty\", false);\r\n            } else if (isNaN(parseInt(reqData.amount))) {\r\n                changeElemData(\"Invalid Amount\", false);\r\n            } else if (reqData.amount > (userData.balance)) {\r\n                changeElemData(\"Insufficient Balance\", false);\r\n            } else if (ethers.utils.isAddress(reqData.address) === false) {\r\n                changeElemData(\"Invalid Address\", false);\r\n            } else {\r\n                res(true);\r\n                document.getElementsByClassName(\"mistakeShower\")[0].style = \"width:0%;\"\r\n            }\r\n            res(false);\r\n        })\r\n    }\r\n\r\n    // const resendCode = async () => {\r\n    //     let digits = '0123456789';\r\n    //     let randomCode = '';\r\n    //     for (let i = 0; i < 4; i++) {\r\n    //         randomCode += digits[Math.floor(Math.random() * 10)];\r\n    //     }\r\n    //     let notificationData = {\r\n    //         title: \"Confirmation Code\",\r\n    //         code: randomCode,\r\n    //         errorMess: \"Please Allow For Notifications, We Will Send Confirmation Code Via Notification\"\r\n    //     }\r\n    //     await sendNotification(notificationData);\r\n    //     setConfirmCode(randomCode)\r\n    // }\r\n\r\n    const sendMoney = async () => {\r\n        let reqData = {\r\n            address: document.getElementsByClassName(\"sendETHAddress\")[0].value,\r\n            amount: document.getElementsByClassName(\"sendETHAmount\")[0].value\r\n        }\r\n        if (await dataValidation(reqData) === true) {\r\n            if (confirmCode === null) {\r\n                let digits = '0123456789';\r\n                let randomCode = '';\r\n                for (let i = 0; i < 4; i++) {\r\n                    randomCode += digits[Math.floor(Math.random() * 10)];\r\n                }\r\n                let notificationData = {\r\n                    title: \"Confirmation Code\",\r\n                    code: randomCode,\r\n                    errorMess: \"Please Allow For Notifications, We Will Send Confirmation Code Via Notification\"\r\n                }\r\n\r\n                if (await sendNotification(notificationData) === true) {\r\n                    document.getElementsByClassName(\"confirmCode\")[0].style = `visibility:visible;opacity:1;margin-top:1.5rem;`;\r\n                    document.getElementsByClassName(\"sendETHSubmitBTN\")[0].style.marginTop = \"3rem\";\r\n                    setConfirmCode(randomCode)\r\n                }\r\n            }\r\n            else {\r\n                if (document.getElementsByClassName(\"sendETHCode\")[0].value === confirmCode) {\r\n                    if (await dataValidation(reqData) === true) {\r\n                        isLoading.current = true;\r\n                        setConfirmCode(null);\r\n                        changeElemData(\"Wait....\", true);\r\n                        try {\r\n                            let res;\r\n                            try {\r\n                                res = await contract.sendMoney(reqData.address, { value: ethers.utils.parseEther(reqData.amount) });\r\n                                await res.wait();\r\n                            } catch (error) {\r\n                                changeElemData(\"Transaction Rejected\", false);\r\n                                isLoading.current = false;\r\n                                return;\r\n                            }\r\n\r\n                            let tempUserRecords = await contract.myRecords();\r\n                            let dataToSend = {\r\n                                address: reqData.address,\r\n                                transBlockNumber: res.blockNumber,\r\n                                data: {\r\n                                    addr: userData.address,\r\n                                    amount: tempUserRecords[tempUserRecords.length - 1].amount,\r\n                                    time: tempUserRecords[tempUserRecords.length - 1].time,\r\n                                    isReceived: true\r\n                                }\r\n                            }\r\n\r\n                            const requestOptions = {\r\n                                method: 'POST',\r\n                                credentials: \"include\", // Remove Or Comment Out In Deployment.\r\n                                headers: { 'Content-Type': 'application/json' },\r\n                                body: JSON.stringify(dataToSend)\r\n                            };\r\n                            let response = await fetch('/storeReceiverData', requestOptions) // Remove \"http://localhost:8000\" In Deployment. \r\n                            await response.json()\r\n\r\n                            parseInt(document.getElementsByClassName(\"sendETHCode\")[0].value)\r\n                            document.getElementsByClassName(\"sendETHAddress\")[0].value = \"\";\r\n                            document.getElementsByClassName(\"sendETHAmount\")[0].value = \"\";\r\n                            document.getElementsByClassName(\"sendETHCode\")[0].value = \"\";\r\n                            document.getElementsByClassName(\"confirmCode\")[0].style = `opacity:0;visibility:hidden;margin-top:0rem;`;\r\n                            document.getElementsByClassName(\"sendETHSubmitBTN\")[0].style.marginTop = \"0rem\";\r\n\r\n                            window.location.reload(true);\r\n                        } catch (error) {\r\n                            changeElemData(\"Something Went Wrong\", false);\r\n                            isLoading.current = false;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    changeElemData(\"Invalid Code\", false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 490)) {\r\n            let newWidth = Math.round((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 90) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n    return (\r\n        <>\r\n            <div className=\"sendETHBody\" style={{ marginTop: (parseInt(document.getElementsByClassName(\"infoShowerMain\")[0].style.top) + 60).toString() + \"px\" }}>\r\n                {\r\n                    contract === null ? <></> : <div className=\"sendETHMain\">\r\n                        <div className=\"dataShowerHeading sendETHHeading\"><i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i> ETH</div>\r\n                        <div className=\"mistakeShower\">\r\n                            {infoMistakes}\r\n                        </div>\r\n                        <div style={{ marginTop: \"0rem\" }} className=\" dataShowerInfoBlock\">\r\n                            <div className=\"infoBlockHeading\">Address</div>\r\n                            <input style={infoBlockStyle} type=\"text\" placeholder=\"Enter Receiver Address\" className=\"sendETHAddress sendETHTakeInfo\" />\r\n                        </div>\r\n\r\n                        <div style={{ marginTop: \"2rem\" }} className=\" dataShowerInfoBlock\">\r\n                            <div className=\"infoBlockHeading\">Amount</div>\r\n                            <input style={infoBlockStyle} type=\"number\" placeholder=\"Enter Amount To Send\" className=\"sendETHAmount sendETHTakeInfo\" />\r\n                        </div>\r\n\r\n                        <div className=\" confirmCode dataShowerInfoBlock\">\r\n                            <div className=\"infoBlockHeading\">Code</div>\r\n                            <input style={infoBlockStyle} type=\"number\" placeholder=\"Enter Confirmation Code\" className=\"sendETHCode sendETHTakeInfo\" />\r\n                        </div>\r\n\r\n                        <div className=\"submitBTNMain\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div onClick={() => sendMoney()} className=\"sendETHSubmitBTN\">\r\n                                Transfer\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n            {\r\n                isLoading.current === true ? <Loading /> : <></>\r\n            }\r\n            {/* <button onClick={() => sendNotification(\"Hello\")}>Click</button> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendETH;","import { useContext, useState, useRef } from 'react'\r\nimport { ethers } from 'ethers';\r\nimport { UserDataContext } from '../../../App';\r\nimport Loading from '../../Loading';\r\nimport VARtETHLogo from '.././VARtETH.png';\r\n\r\nconst SendETHSimp = () => {\r\n    const contextData = useContext(UserDataContext);\r\n    const userData = contextData.userInfo;\r\n    const [confirmCode, setConfirmCode] = useState(null);\r\n    const isLoading = useRef(false);\r\n    const [infoMistakes, setInfoMistakes] = useState(\"No Mistakes\");\r\n\r\n    let infoBlockStyle;\r\n\r\n    const changeElemData = (message, isProcessing) => {\r\n        setInfoMistakes(message)\r\n        if (isProcessing === true) {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:#3c3c3c;background-color:#d1ffd1;`;\r\n        } else {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:red;background-color:#ffd0d0;`;\r\n        }\r\n    }\r\n\r\n    const sendNotification = (notificationData) => {\r\n        return new Promise(async (res, rej) => {\r\n            if (Notification.permission === \"denied\") {\r\n                alert(notificationData.errorMess)\r\n                res(false);\r\n            }\r\n            else if (Notification.permission === \"default\") {\r\n                await Notification.requestPermission();\r\n\r\n                navigator.serviceWorker.getRegistration().then(function (reg) {\r\n                    var options = {\r\n                        body: notificationData.code,\r\n                        icon: VARtETHLogo,\r\n                        vibrate: [100, 50, 100],\r\n                        data: {\r\n                            dateOfArrival: Date.now(),\r\n                            primaryKey: 1\r\n                        }\r\n                    };\r\n                    reg.showNotification(\"Confirmation Code\", options);\r\n                });\r\n\r\n            }\r\n            else {\r\n                navigator.serviceWorker.getRegistration().then(function (reg) {\r\n                    var options = {\r\n                        body: notificationData.code,\r\n                        icon: VARtETHLogo,\r\n                        vibrate: [100, 50, 100],\r\n                        data: {\r\n                            dateOfArrival: Date.now(),\r\n                            primaryKey: 1\r\n                        }\r\n                    };\r\n                    reg.showNotification(\"Confirmation Code\", options);\r\n                });\r\n            }\r\n            res(true);\r\n        })\r\n    }\r\n\r\n\r\n    const dataValidation = (reqData) => {\r\n        return new Promise((res, rej) => {\r\n            if (reqData.to === \"\" || reqData.amount === \"\" || reqData.password === \"\") {\r\n                changeElemData(\"Input Fields Are Empty\", false);\r\n            } else if (isNaN(parseInt(reqData.amount))) {\r\n                changeElemData(\"Invalid Amount\", false);\r\n            } else if (reqData.amount > (userData.balance)) {\r\n                changeElemData(\"Insufficient Balance\", false);\r\n            } else if (ethers.utils.isAddress(reqData.to) === false) {\r\n                changeElemData(\"Invalid Address\", false);\r\n            } else if (reqData.password.length < 8) {\r\n                changeElemData(\"Invalid Password\", false);\r\n            }\r\n            else {\r\n                res(true);\r\n                document.getElementsByClassName(\"mistakeShower\")[0].style = \"width:0%;\"\r\n            }\r\n            res(false);\r\n        })\r\n    }\r\n\r\n    // const resendCode = async () => {\r\n    //     let digits = '0123456789';\r\n    //     let randomCode = '';\r\n    //     for (let i = 0; i < 4; i++) {\r\n    //         randomCode += digits[Math.floor(Math.random() * 10)];\r\n    //     }\r\n    //     let notificationData = {\r\n    //         title: \"Confirmation Code\",\r\n    //         code: randomCode,\r\n    //         errorMess: \"Please Allow For Notifications, We Will Send Confirmation Code Via Notification\"\r\n    //     }\r\n    //     await sendNotification(notificationData);\r\n    //     setConfirmCode(randomCode)\r\n    // }\r\n\r\n    const sendRequest = async () => {\r\n        let reqData = {\r\n            to: document.getElementsByClassName(\"sendETHAddress\")[0].value,\r\n            amount: document.getElementsByClassName(\"sendETHAmount\")[0].value,\r\n            password: document.getElementsByClassName(\"sendETHPassword\")[0].value,\r\n        }\r\n        if (await dataValidation(reqData) === true) {\r\n            let wei = ethers.utils.parseEther(reqData.amount); // Converting Ethers To Wei, Visit \"https://docs.ethers.io/v4/api-utils.html\" For More Info.\r\n            reqData.amount = wei.toString();\r\n\r\n            isLoading.current = true;\r\n            setConfirmCode(null);\r\n            changeElemData(\"Wait....\", true);\r\n\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                credentials: \"include\", // Remove Or Comment Out In Deployment.\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(reqData)\r\n            };\r\n\r\n            let response = await fetch('/sendETH', requestOptions) // Remove \"http://localhost:8000\" In Deployment. \r\n            let data = await response.json()\r\n            isLoading.current = false;\r\n\r\n            if (data.isDone === true) {\r\n                changeElemData(data.message, true);\r\n                window.location.reload(true);\r\n            }\r\n            else {\r\n                changeElemData(data.message, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const sendMoney = async () => {\r\n        let reqData = {\r\n            to: document.getElementsByClassName(\"sendETHAddress\")[0].value,\r\n            amount: document.getElementsByClassName(\"sendETHAmount\")[0].value,\r\n            password: document.getElementsByClassName(\"sendETHPassword\")[0].value,\r\n        }\r\n        if (await dataValidation(reqData) === true) {\r\n            reqData.amount = ethers.utils.parseEther(reqData.amount);\r\n            if (confirmCode === null) {\r\n                let digits = '0123456789';\r\n                let randomCode = '';\r\n                for (let i = 0; i < 4; i++) {\r\n                    randomCode += digits[Math.floor(Math.random() * 10)];\r\n                }\r\n                let notificationData = {\r\n                    title: \"Confirmation Code\",\r\n                    code: randomCode,\r\n                    errorMess: \"Please Allow For Notifications, We Will Send Confirmation Code Via Notification\"\r\n                }\r\n                if (await sendNotification(notificationData) === true) {\r\n                    document.getElementsByClassName(\"confirmCode\")[0].style = `visibility:visible;opacity:1;margin-top:1.5rem;`;\r\n                    document.getElementsByClassName(\"sendETHSubmitBTN\")[0].style.marginTop = \"3rem\";\r\n                    setConfirmCode(randomCode);\r\n                }\r\n            }\r\n            else {\r\n                if (document.getElementsByClassName(\"sendETHCode\")[0].value === confirmCode) {\r\n                    await sendRequest();\r\n                    // console.log(parseInt(document.getElementsByClassName(\"sendETHCode\")[0].value), confirmCode)\r\n                    // document.getElementsByClassName(\"sendETHAddress\")[0].value = \"\";\r\n                    // document.getElementsByClassName(\"sendETHAmount\")[0].value = \"\";\r\n                    // document.getElementsByClassName(\"sendETHPassword\")[0].value = \"\";\r\n                    document.getElementsByClassName(\"sendETHCode\")[0].value = \"\";\r\n                    document.getElementsByClassName(\"confirmCode\")[0].style = `opacity:0;visibility:hidden;margin-top:0rem;`;\r\n                    document.getElementsByClassName(\"sendETHSubmitBTN\")[0].style.marginTop = \"0rem\";\r\n                }\r\n                else {\r\n                    changeElemData(\"Invalid Code\", false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const getHeightForInfo = () => {\r\n        if ((document.getElementsByTagName(\"body\")[0].offsetWidth <= 490)) {\r\n            let newWidth = Math.round((document.getElementsByTagName(\"body\")[0].offsetWidth - ((document.getElementsByTagName(\"body\")[0].offsetWidth * 4) / 100)) - 90) + \"px\";\r\n            infoBlockStyle = {\r\n                width: newWidth\r\n            }\r\n        }\r\n        else {\r\n            infoBlockStyle = {}\r\n        }\r\n    }\r\n    getHeightForInfo();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"sendETHBody\" style={{ marginTop: (parseInt(document.getElementsByClassName(\"infoShowerMain\")[0].style.top) + 60).toString() + \"px\" }}>\r\n                <div className=\"sendETHMain\">\r\n                    <div className=\"dataShowerHeading sendETHHeading\"><i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i> ETH</div>\r\n                    <div className=\"mistakeShower\">\r\n                        {infoMistakes}\r\n                    </div>\r\n                    <div style={{ marginTop: \"0rem\" }} className=\" dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Address</div>\r\n                        <input style={infoBlockStyle} type=\"text\" placeholder=\"Enter Receiver Address\" className=\"sendETHAddress sendETHTakeInfo\" />\r\n                    </div>\r\n                    <div style={{ marginTop: \"2rem\" }} className=\" dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Amount</div>\r\n                        <input style={infoBlockStyle} type=\"number\" placeholder=\"Enter Amount To Send\" className=\"sendETHAmount sendETHTakeInfo\" />\r\n                    </div>\r\n                    <div style={{ marginTop: \"2rem\" }} className=\" dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Key</div>\r\n                        <input style={infoBlockStyle} type=\"password\" placeholder=\"Enter Your Key\" className=\"sendETHPassword sendETHTakeInfo\" />\r\n                    </div>\r\n                    <div className=\" confirmCode dataShowerInfoBlock\">\r\n                        <div className=\"infoBlockHeading\">Code</div>\r\n                        <input style={infoBlockStyle} type=\"number\" placeholder=\"Enter Confirmation Code\" className=\"sendETHCode sendETHTakeInfo\" />\r\n                    </div>\r\n                    <div className=\"submitBTNMain\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                        <div onClick={() => sendMoney()} className=\"sendETHSubmitBTN\">\r\n                            Transfer\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                isLoading.current === true ? <Loading /> : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendETHSimp;","export default __webpack_public_path__ + \"static/media/metamaskLogo.dabbc866.png\";","import React, { useContext } from \"react\";\r\nimport metamaskLogo from \".././icons/metamaskLogo.png\";\r\nimport { loginData } from \".././App\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Header = () => {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const contextData = useContext(loginData);\r\n\r\n    const logout = async (isLogout) => {\r\n        let response = await fetch('/logout', { credentials: \"include\" })\r\n        await response.json() // Provides JSON Data   \r\n        if (isLogout === true) {\r\n            history.push(\"/login\");\r\n        }\r\n        window.location.reload(true);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"headerMainTop\">\r\n                <div className=\"headerSub\">\r\n                    <h1 className=\"mainTitle\"><span style={{ cursor: \"pointer\" }}>VARt</span> <span className=\"subTitle\">Eth</span></h1>\r\n                </div>\r\n                {\r\n                    location.pathname === \"/\" ?\r\n                        <div className=\"operationDiv\">\r\n                            {\r\n                                contextData.isMetamask === true && contextData.isLogin === true ?\r\n                                    <div className=\"operationBtn1\">\r\n                                        <img onClick={() => logout(false)} src={metamaskLogo} alt=\"Metamask\" />\r\n                                    </div> :\r\n                                    <></>\r\n                            }\r\n                            {\r\n                                contextData.isLogin === true ?\r\n                                    <div className=\"operationBtn2\">\r\n                                        <i onClick={() => logout(true)} className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n                                    </div> :\r\n                                    <div className=\"operationBtn2\">\r\n                                        <Link style={{ textDecoration: \"none\", color: \"inherit\" }} to=\"/login\"><i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i></Link>\r\n                                    </div>\r\n                            }\r\n                        </div> :\r\n                        <></>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport Loading from \"../Loading\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FileSaver from 'file-saver'; // This Is Used For Automatically Download Text File Containing UserData In User Device.\r\n\r\nconst Signup = () => {\r\n    const isOTPCheck = useRef(false);\r\n    const [infoMistakes, setInfoMistakes] = useState(\"No Mistakes\");\r\n    const isLoading = useRef(false);\r\n\r\n    const changeElemData = (message, isProcessing) => {\r\n        setInfoMistakes(message)\r\n        if (isProcessing === true) {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;width:100%;color:#3c3c3c;background-color:#d1ffd1;`;\r\n        } else {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;width:100%;color:red;background-color:#ffd0d0;`;\r\n        }\r\n    }\r\n\r\n    const checkIsValidInfo = () => {\r\n        return new Promise((res, rej) => {\r\n            let inputElem = document.getElementsByClassName(\"takeInfoBlock\");\r\n            if (((inputElem[0].value === \"\") && (inputElem[1].value === \"\"))) {\r\n                changeElemData(\"Fill All Details\", false)\r\n            } else if ((inputElem[0].value === \"\")) {\r\n                changeElemData(\"Username Field Is Empty\", false)\r\n            } else if ((inputElem[1].value === \"\")) {\r\n                changeElemData(\"Email Field Is Empty\", false)\r\n            } else if ((inputElem[2].value === \"\")) {\r\n                changeElemData(\"Password Field Is Empty\", false)\r\n            } else if ((inputElem[2].value.length < 8)) {\r\n                changeElemData(\"Password Is Too Small \", false)\r\n            } else if ((inputElem[0].value.length >= 35)) {\r\n                changeElemData(\"Username Is Too Large\", false)\r\n            } else if (inputElem[0].value.indexOf(\"@\") !== -1) {\r\n                changeElemData(\"Username Should Not Have @\", false)\r\n            } else if ((((inputElem[0].value.length !== inputElem[0].value.replace(/ /g, '')).length) || ((inputElem[2].value.length !== inputElem[2].value.replace(/ /g, '')).length))) { // Visit \"https://stackoverflow.com/questions/6623231/remove-all-white-spaces-from-text\" For More Info About How To Remove All Whitespace From String.\r\n                if (((inputElem[2].value.length !== inputElem[2].value.replace(/ /g, '')).length)) {\r\n                    changeElemData(\"Password Have White Spaces\", false)\r\n                }\r\n                else {\r\n                    changeElemData(\"Username Have White Spaces\", false)\r\n                }\r\n            }\r\n            else {\r\n                if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(inputElem[1].value)) {\r\n                    res(true);\r\n                }\r\n                else {\r\n                    changeElemData(\"Invalid Email\", false)\r\n                }\r\n            }\r\n            res(false);\r\n        })\r\n    }\r\n\r\n    const sendSignUpRequest = async () => {\r\n        if (await checkIsValidInfo() === true) {\r\n            let userName = document.getElementsByClassName(\"takeInfoBlock\")[0].value;\r\n            let email = document.getElementsByClassName(\"takeInfoBlock\")[1].value;\r\n            let password = document.getElementsByClassName(\"takeInfoBlock\")[2].value;\r\n            isLoading.current = true;\r\n            changeElemData(\"Wait....\", true);\r\n            localStorage.setItem(\"userMail\", email); // Here We Will Store User Mail Id In Local Storage, We Will Use Them For OTP Checking And Send It To Server With Entered OTP.\r\n\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                credentials: \"include\", // Remove Or Comment Out In Deployment.\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    userName: userName,\r\n                    email: email,\r\n                    password: password\r\n                })\r\n            };\r\n            let response = await fetch('/signup', requestOptions) // Remove \"http://localhost:8000\" In Deployment. \r\n            let data = await response.json()\r\n\r\n            isLoading.current = false;\r\n\r\n            if (data.isValid === undefined) {\r\n                localStorage.removeItem(\"userMail\");\r\n                changeElemData(data.message, false);\r\n            }\r\n            else {\r\n                isOTPCheck.current = true;\r\n                changeElemData(\"OTP Sended On Mail Id\", true);\r\n            }\r\n\r\n        } else {\r\n            console.log(\"Fill Details Properly\")\r\n        }\r\n    }\r\n\r\n    const checkOTP = async () => {\r\n        let inputElem = document.getElementsByClassName(\"takeInfoBlock\");\r\n        if ((inputElem[0].value.length !== 6) || ((inputElem[0].value.length !== inputElem[0].value.replace(/ /g, '')).length)) {\r\n            changeElemData(\"Invalid OTP\", false);\r\n        } else {\r\n            let email = localStorage.getItem(\"userMail\");\r\n            if ((email === undefined) || (email === null) || (email.length < 2) || (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) !== true)) {\r\n\r\n                changeElemData(\"Invalid OTP\", false)\r\n            } else {\r\n                isLoading.current = true;\r\n                changeElemData(\"Wait....\", true);\r\n                const requestOptions = {\r\n                    method: 'POST',\r\n                    credentials: \"include\", // Remove Or Comment Out In Deployment.\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        email: email,\r\n                        otp: inputElem[0].value\r\n                    })\r\n                };\r\n                let response = await fetch('/signup/emailValidation', requestOptions) // Remove \"http://localhost:8000\" In Deployment. \r\n                let data = await response.json()\r\n\r\n                isLoading.current = false;\r\n\r\n                if (data.privateKey === undefined) {\r\n                    changeElemData(data.message, false);\r\n                }\r\n                else {\r\n                    let userDataToStore=` Dear User We Are Thankful Of You For Using Our Service.\\n Do Not Share This File Of This Files's Data, Make Several Copies Of This File And Store It To Several Places.\\n Address:- ${data.address}\\n Private Key:- ${data.privateKey}\\n`                  \r\n                    var blob = new Blob([userDataToStore], { type: \"text/plain;charset=utf-8\" }); // It Will Create And Automatically Download Text File In User Device, Visit \"https://ourcodeworld.com/articles/read/189/how-to-create-a-file-and-generate-a-download-with-javascript-in-the-browser-without-a-server\" For More Info.\r\n                    FileSaver.saveAs(blob, \"userData.txt\");\r\n                    localStorage.removeItem(\"userMail\");\r\n                    changeElemData(data.message, true);\r\n                    window.location.reload(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <> {isOTPCheck.current === false ?\r\n            // This Group Of Code Is Used For Taking information's From User. It Will Take UserName, Email ID, And Password.\r\n            <>\r\n                <div className=\"mainDiv\">\r\n                    <div className=\"mainFormContainer\">\r\n                        <div className=\"subFormContainer\">\r\n                            <div className=\"formContainerHeading \">Sign Up</div>\r\n                            <div className=\"mistakeShower\">\r\n                                {infoMistakes}\r\n                            </div>\r\n\r\n                            <div id=\"dataTakerBlock1\" className=\"dataShowerInfoBlock\">\r\n                                <div className=\"infoBlockHeading takeInfo\">Username</div>\r\n                                <input type=\"text\" placeholder=\"Enter Unique Username\" className=\"takeInfoBlock\" />\r\n                            </div>\r\n\r\n                            <div id=\"dataTakerBlock2\" style={{ marginTop: \"2rem\" }} className=\"dataShowerInfoBlock\">\r\n                                <div className=\"infoBlockHeading takeInfo\">Email&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n                                <input type=\"text\" placeholder=\"Enter Email ID\" className=\"takeInfoBlock\" />\r\n                            </div>\r\n\r\n                            <div id=\"dataTakerBlock3\" style={{ marginTop: \"2rem\" }} className=\"dataShowerInfoBlock\">\r\n                                <div className=\"infoBlockHeading takeInfo\">Password</div>\r\n                                <input type=\"password\" placeholder=\"Enter Secure Password\" className=\"takeInfoBlock\" />\r\n                            </div>\r\n\r\n                            <div className=\"submitBTNMain\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                <div onClick={() => sendSignUpRequest()} className=\"submitBTN\">\r\n                                    Create\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ marginTop: \"1.5rem\", textAlign: \"center\", fontSize: \"1.3rem\", fontFamily: \"'Source Sans Pro', sans-serif\" }}>\r\n                            <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/login\">Already Have Account</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </> :\r\n            <><div className=\"mainDiv\">\r\n                <div className=\"mainFormContainer\">\r\n                    <div className=\"subFormContainer\">\r\n                        <div className=\"formContainerHeading \">Sign Up</div>\r\n                        <div className=\"mistakeShower\">\r\n                            {infoMistakes}\r\n                        </div>\r\n                        <div style={{ marginTop: \"2rem\" }} id=\"dataTakerBlock1\" className=\"dataShowerInfoBlock\">\r\n                            <div className=\"infoBlockHeading takeInfo\">OTP</div>\r\n                            <input type=\"number\" placeholder=\"Enter OTP\" className=\"takeInfoBlock\" />\r\n                        </div>\r\n                        <div className=\"submitBTNMain\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div onClick={() => checkOTP()} className=\"submitBTN\">\r\n                                Create\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div></>}\r\n\r\n            {\r\n                isLoading.current === true ? <Loading /> : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport Loading from \"./Loading\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Login = () => {\r\n    const [infoMistakes, setInfoMistakes] = useState(\"No Mistakes\"); // This State Wil Contains Mistake Message.\r\n    const isLoading = useRef(false);\r\n\r\n    const changeElemData = (message, isProcessing) => { // This Function Will Actually Change Properties Or Styling Of \"Mistake Shower Div\".\r\n        setInfoMistakes(message)\r\n        if (isProcessing === true) {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:#3c3c3c;background-color:#d1ffd1;`;\r\n        } else {\r\n            document.getElementsByClassName(\"mistakeShower\")[0].style = `margin-top:1rem;margin-bottom:1rem;width:100%;color:red;background-color:#ffd0d0;`;\r\n        }\r\n    }\r\n\r\n    const checkInfo = () => {\r\n        return new Promise((res, rej) => {\r\n            const authData = document.getElementsByClassName(\"takeInfoBlock\")[0].value\r\n            if (authData === \"\" || document.getElementsByClassName(\"takeInfoBlock\")[1].value === \"\") {\r\n                changeElemData(\"Please Fill Add Details\", false)\r\n                res(false)\r\n            } else if (((ethers.utils.isAddress(authData) === true) || (authData.indexOf(\"@\") !== -1) || (authData.length < 35))) {\r\n                res(true)\r\n            } else {\r\n                changeElemData(\"Invalid Details\", false)\r\n                res(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    const sendInfo = async () => {\r\n        if (await checkInfo() === true) {\r\n            let authData = document.getElementsByClassName(\"takeInfoBlock\")[0].value;\r\n            let password = document.getElementsByClassName(\"takeInfoBlock\")[1].value;\r\n            isLoading.current = true;\r\n            changeElemData(\"Wait....\", true);\r\n\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                credentials: \"include\", // Remove Or Comment Out In Deployment.\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    authData: authData,\r\n                    password: password\r\n                })\r\n            };\r\n            let response = await fetch('/login', requestOptions) // Remove \"http://localhost:8000\" In Deployment. \r\n            let data = await response.json();\r\n            isLoading.current = false;\r\n\r\n            if (data.isValid === true) {\r\n                changeElemData(\"Done\", true);\r\n                window.location.reload(true);\r\n            }\r\n            else {\r\n                changeElemData(data.message, false);\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <>\r\n                <div className=\"mainDiv\">\r\n                    <div className=\"mainFormContainer\">\r\n                        <div className=\"subFormContainer\">\r\n                            <div className=\"formContainerHeading \">Login</div>\r\n                            <div className=\"mistakeShower\">\r\n                                {infoMistakes}\r\n                            </div>\r\n                            <div style={{ margin: \"0rem 1rem 0rem 1rem\" }} id=\"dataTakerBlock1\" className=\"dataShowerInfoBlock\">\r\n                                <input style={{ paddingLeft: \"3rem\" }} type=\"text\" placeholder=\"Username, Email, Or Address\" className=\"takeInfoBlock\" />\r\n                            </div>\r\n                            <div style={{ margin: \"2rem 1rem 0rem 1rem\" }} id=\"dataTakerBlock1\" className=\"dataShowerInfoBlock\">\r\n                                <input style={{ paddingLeft: \"3rem\" }} type=\"password\" placeholder=\"Password, Or Private Key\" className=\"takeInfoBlock\" />\r\n                            </div>\r\n\r\n                            <div className=\"submitBTNMain\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                <div onClick={() => sendInfo()} className=\"submitBTN\">\r\n                                    Submit\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ marginTop: \"1.5rem\", textAlign: \"center\", fontSize: \"1.3rem\", fontFamily: \"'Source Sans Pro', sans-serif\" }}>\r\n                            <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/signup\">Create New Account</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n            {\r\n                isLoading.current === true ? <Loading /> : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <>\r\n            <div className=\"div1\">\r\n                <div className=\"div2\">\r\n                    <div className=\"op40 err1\">\r\n                        <h1>4</h1>\r\n                    </div>\r\n                    <div className=\"op41 err1\">\r\n                        <h1>0</h1>\r\n                    </div>\r\n                    <div className=\"op42 err1\">\r\n                        <h1>4</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"message1\">\r\n                    <h1>Something Went Wrong</h1>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Error404;","import React, { useState, useRef, useEffect, createContext } from 'react';\nimport './App.css'\nimport { ethers } from \"ethers\";\nimport moneyTransfer from './contract/moneyTransfer.json';\nimport Dashboard from './components/DashBoard/Dashboard'\nimport SendETH from './components/DashBoard/MetamaskLogin/SendETH';\nimport SendETHSimp from './components/DashBoard/SimpleLogin/SendETHSimp';\nimport Loading from './components/Loading';\nimport Header from \"./components/Header\";\nimport SignUp from './components/SignUp/Signup';\nimport Login from \"./components/Login\";\nimport Error404 from './components/Error404';\nimport { Route, Switch, useHistory, useLocation } from \"react-router-dom\";\n\nimport io from \"socket.io-client\";\nconst socket = io.connect('/'); // Replace This URL To '/' In Deployment, If Front End Is Deployed On Same Server. In Case Of Different Domain Of Server Use Its Domain\n\nconst UserDataContext = createContext();\nconst loginData = createContext();\n\nfunction App() {\n  //location.reload();\n  const [userData, setUserData] = useState(null);\n  const [ETHContract, setETHContract] = useState(null);\n  const [isMetamask, setIsMetamask] = useState(null);\n  const isLogin = useRef(false);\n  const history = useHistory();\n  const location = useLocation();\n\n  const reloadPage = () => {\n    window.location.reload();\n  }\n\n  if (window.ethereum) { // This Statement Will Caught When Metamask Account Will Changed.\n    window.ethereum.on('accountsChanged', () => reloadPage());\n  }\n\n  useEffect( () => {\n    const initialProcessing=async()=>\n    {\n     // This Fetch Statement Will Send Request And Then Receive Info About Whether Cookie Contains Token Or Valid Token.\n    // If Response Will True So It Means Uses Has Created Account And They Can Use This App Without Metamask.\n    // If Response Will False So User Has To Create Account For Using App.\n    let response = await fetch('/isLogin', { credentials: \"include\" })\n    let data = await response.json() // Provides JSON Data\n    isLogin.current = data.message; // Response Stored In \"isLogin\" useRef.\n\n    if ((window.ethereum !== undefined) && (isLogin.current === false)) { // This Statement Checks That Whether User Have Metamask Or Not, \n      //If There Is A Metamask And Cookie Does Not Contains Token Then Statement Written Inside Will Execute. \n      setIsMetamask(true);\n\n      const provider = new ethers.providers.Web3Provider(\n        window.ethereum\n      );\n\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      let contract = new ethers.Contract('0x5149609a8e02B4A86D52249C58811C202972a546', moneyTransfer.abi, signer)\n\n      setETHContract(contract);\n      // await contract.sendMoney('0x58A7F5F4715333b6185Ef1AF19bC2e42fCB4b55f', { value: \"1000000000000000000\" });\n      let fetchedData = {\n        address: await signer.getAddress(),\n        balance: ethers.utils.formatEther(await signer.getBalance()),\n        transactions: await contract.myRecords()\n      }\n      setUserData(fetchedData);\n    }\n    else {\n      // If There Will Be Not Metamask Installed Then setIsMetamask Will Set To False Otherwise True.\n      if ((window.ethereum === undefined)) {\n        setIsMetamask(false);     \n      } else {\n        setIsMetamask(true);\n      }\n\n      // If isLogin Value Will Be False So It Indicates That There Is Not Cookie Available And User Is Not Log, In This Situation Page Will Redirect To \"/signup\" Otherwise Page Will Redirect To \"/\" Or Main Page.\n      if (isLogin.current === false) {\n        if (location.pathname !== \"/signup\") {\n          history.push('/login');\n        }\n      }\n      else {\n        history.push('/');\n        let response = await fetch('/getInfo', { credentials: \"include\" })\n        let userDataOp = await response.json()\n        setUserData(userDataOp.data);\n      }\n    }\n    }\n    initialProcessing();\n  }, [])\n\n\n  return (\n    <>\n      <loginData.Provider value={{ isLogin: isLogin.current, isMetamask: isMetamask }}>\n        <Header />\n\n        <Switch>\n          <Route exact path='/login'>\n            <Login />\n          </Route>\n          <Route exact path='/signup'>\n            <SignUp />\n          </Route>\n          <Route exact path='/'>\n            <UserDataContext.Provider value={{ userInfo: userData, contractData: ETHContract }}>\n              <Dashboard />\n              {\n                userData === null ? <Loading /> : isLogin.current === true ? <SendETHSimp /> : <SendETH />\n              }\n\n            </UserDataContext.Provider>\n          </Route>\n          <Route>\n            <Error404 />\n          </Route>\n        </Switch>\n      </loginData.Provider>\n    </>\n  )\n}\n\nexport default App\nexport { UserDataContext, loginData } // Exporting Context\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n      <App /> \n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}